{"ast":null,"code":"import _objectSpread from \"F:\\\\documents\\\\Desktop\\\\ubccourse\\\\EECE571g\\\\express330\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"F:\\\\documents\\\\Desktop\\\\ubccourse\\\\EECE571g\\\\express330\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\documents\\\\Desktop\\\\ubccourse\\\\EECE571g\\\\express330\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\documents\\\\Desktop\\\\ubccourse\\\\EECE571g\\\\express330\\\\ExpressProject\\\\src\\\\components\\\\Receiver.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\nimport Dialog from \"./Dialog\";\nimport Grade from \"./Grade\";\nimport './App.css';\nimport logo from '../images/logo.png';\nimport receiverImg from '../images/receiver.jpg';\n\nclass Receiver extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: '',\n      statusMap: {\n        101: 'Waiting to be taken',\n        102: 'Waiting for delivery',\n        103: 'Delivered, waiting a confirmation',\n        104: 'Completed',\n        105: 'Cancelled',\n        106: 'Completed and Graded'\n      },\n      dialog: false,\n      message: [],\n      canGrade: false,\n      gradeId: ''\n    };\n\n    this.confirmOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.confirmOrder(_orderId).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.confirmOrder(_orderId).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.makeGrade = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_orderId, _grade) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.makeGrade(_orderId, _grade).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.makeGrade(_orderId, _grade).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n\n                window.location.reload();\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.showInfo = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                dialog: true,\n                message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType]\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.showGrade = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_orderId) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                canGrade: true\n              });\n\n              _this.setState({\n                gradeId: _orderId\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n\n      return function (_x15) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.closeDialog = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n\n    this.closeGrade = () => {\n      this.setState({\n        canGrade: false\n      });\n    };\n\n    this.Home = () => {\n      this.props.history.push({\n        pathname: '/'\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context5.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context6.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context6.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context6.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            web3 = window.web3;\n            _context7.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context7.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context7.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context7.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context7.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context7.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context7.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context7.next = 33;\n              break;\n            }\n\n            _context7.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context7.sent;\n            _context7.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context7.sent;\n            _context7.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context7.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context7.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context7.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context7.sent;\n\n            _this3.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this3.state.currentCourier);\n            _context7.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), ' ', this.state.dialog && React.createElement(Dialog, {\n      message: this.state.message,\n      closeDialog: this.closeDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), this.state.canGrade && React.createElement(Grade, {\n      gradeId: this.state.gradeId,\n      makeGrade: this.makeGrade,\n      closeGrade: this.closeGrade,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mybody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: this.Home.bind(this),\n      src: logo,\n      className: \"logoimg2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: receiverImg,\n      className: \"logoimg5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"orderH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" All Orders To Be Confirmed \")), React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Sender Name \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" Sender Address \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" Item Type \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" Order Status\"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" Confirm Order\"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.receiver == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"td\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \" \", order.senderName, \" \"), ' ', React.createElement(\"td\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), ' ', React.createElement(\"td\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), ' ', React.createElement(\"td\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \" \", this.state.statusMap[order.orderStatus], \" \"), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, ' ', order.orderStatus == '103' ? React.createElement(\"button\", {\n        name: order.orderId,\n        className: \"confirmButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return _this4.confirmOrder(event.target.name);\n\n                case 2:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }));\n\n          return function (_x16) {\n            return _ref5.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Confirm Order\", ' ') : null, ' '), ' ') : null;\n    }), ' '), ' '), ' '), React.createElement(\"h2\", {\n      className: \"orderRecordsH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Your Confirmed Orders \"), ' ', React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \" Order Status \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \" Make Grade \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" Grade \"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.orderStatus == '104' || order.orderStatus == '106' && order.receiver == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, ' ', this.state.statusMap[order.orderStatus], ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, ' ', order.orderStatus == '104' ? React.createElement(\"button\", {\n        className: \"makeButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n            return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _this4.showGrade(order.orderId);\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }));\n\n          return function (_x17) {\n            return _ref6.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Grade\", ' ') : null, ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, ' ', order.orderStatus == '106' ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, order.orderGrade.toString()) : null, ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, ' ', React.createElement(\"button\", {\n        className: \"showInfoButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(event) {\n            return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return _this4.showInfo(order.senderName, order.senderPhone, order.pickupAddr, order.receiverName, order.receiverPhone, order.shippingAddr, order.receiver, order.startTime, order.endTime, order.orderWeight, order.orderType);\n\n                case 2:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }, _callee10);\n          }));\n\n          return function (_x18) {\n            return _ref7.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"showInfo\", ' '), ' '), ' ') : null;\n    }), ' '), ' '), ' ')), ' ');\n  }\n\n}\n\nexport default Receiver;","map":{"version":3,"sources":["F:/documents/Desktop/ubccourse/EECE571g/express330/ExpressProject/src/components/Receiver.js"],"names":["React","Component","Addressbar","Express","Web3","Dialog","Grade","logo","receiverImg","Receiver","state","account","orders","currentCourier","statusMap","dialog","message","canGrade","gradeId","confirmOrder","_orderId","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","makeGrade","_grade","window","location","reload","showInfo","senderName","senderPhone","pickupAddr","receiverName","receiverPhone","shippingAddr","receiver","startTime","endTime","orderWeight","orderType","showGrade","closeDialog","closeGrade","Home","props","history","push","pathname","componentDidMount","getWeb3Provider","connectToBlockchain","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render","bind","map","order","key","orderId","toString","orderStatus","event","target","name","orderGrade"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,SAAS,EAAE;AACT,aAAK,qBADI;AAET,aAAK,sBAFI;AAGT,aAAK,mCAHI;AAIT,aAAK,WAJI;AAKT,aAAK,WALI;AAMT,aAAK;AANI,OAJL;AAYNC,MAAAA,MAAM,EAAE,KAZF;AAaNC,MAAAA,OAAO,EAAE,EAbH;AAcNC,MAAAA,QAAQ,EAAC,KAdH;AAeNC,MAAAA,OAAO,EAAC;AAfF,KADuB;;AAAA,SAyE/BC,YAzE+B;AAAA,0EAyEhB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACb,cAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AADa;AAAA,qBAEW,KAAI,CAACZ,KAAL,CAAWa,eAAX,CAA2BC,OAA3B,CACrBL,YADqB,CACRC,QADQ,EAErBK,WAFqB,CAET;AAAEC,gBAAAA,IAAI,EAAE,KAAI,CAAChB,KAAL,CAAWC;AAAnB,eAFS,CAFX;;AAAA;AAEPgB,cAAAA,SAFO;;AAKb,cAAA,KAAI,CAACjB,KAAL,CAAWa,eAAX,CAA2BC,OAA3B,CACGL,YADH,CACgBC,QADhB,EAEGQ,IAFH,CAEQ;AAAEF,gBAAAA,IAAI,EAAE,KAAI,CAAChB,KAAL,CAAWC,OAAnB;AAA4BkB,gBAAAA,GAAG,EAAEF;AAAjC,eAFR,EAGGG,IAHH,CAGQ,SAHR,EAGmBC,OAAO,IAAI;AAC1B,gBAAA,KAAI,CAACV,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;AACD,eALH;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA,OAzEgB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAsF/BU,SAtF+B;AAAA,2EAsFnB,kBAAOZ,QAAP,EAAiBa,MAAjB;AAAA;AAAA;AAAA;AAAA;AACV,cAAA,KAAI,CAACZ,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AADU;AAAA,qBAEc,KAAI,CAACZ,KAAL,CAAWa,eAAX,CAA2BC,OAA3B,CACrBQ,SADqB,CACXZ,QADW,EACDa,MADC,EAErBR,WAFqB,CAET;AAAEC,gBAAAA,IAAI,EAAE,KAAI,CAAChB,KAAL,CAAWC;AAAnB,eAFS,CAFd;;AAAA;AAEJgB,cAAAA,SAFI;;AAKV,cAAA,KAAI,CAACjB,KAAL,CAAWa,eAAX,CAA2BC,OAA3B,CACGQ,SADH,CACaZ,QADb,EACuBa,MADvB,EAEGL,IAFH,CAEQ;AAAEF,gBAAAA,IAAI,EAAE,KAAI,CAAChB,KAAL,CAAWC,OAAnB;AAA4BkB,gBAAAA,GAAG,EAAEF;AAAjC,eAFR,EAGGG,IAHH,CAGQ,SAHR,EAGmBC,OAAO,IAAI;AAC1B,gBAAA,KAAI,CAACV,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AACAY,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,eANH;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA,OAtFmB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAsG/BC,QAtG+B;AAAA,2EAsGpB,kBAAOC,UAAP,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,YAA5C,EAA0DC,aAA1D,EAAyEC,YAAzE,EAAuFC,QAAvF,EAAiGC,SAAjG,EAA4GC,OAA5G,EAAqHC,WAArH,EAAkIC,SAAlI;AAAA;AAAA;AAAA;AACT,cAAA,KAAI,CAAC3B,QAAL,CAAc;AACZN,gBAAAA,MAAM,EAAE,IADI;AAEZC,gBAAAA,OAAO,EAAE,CAACsB,UAAD,EAAaC,WAAb,EAA0BC,UAA1B,EAAsCC,YAAtC,EAAoDC,aAApD,EAAmEC,YAAnE,EAAiFC,QAAjF,EAA2FC,SAA3F,EAAsGC,OAAtG,EAA+GC,WAA/G,EAA4HC,SAA5H;AAFG,eAAd;;AADS;AAAA;AAAA;AAAA;AAAA;AAAA,OAtGoB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SA8G/BC,SA9G+B;AAAA,2EA8GnB,kBAAO7B,QAAP;AAAA;AAAA;AAAA;AACP,cAAA,KAAI,CAACC,QAAL,CAAc;AAAEJ,gBAAAA,QAAQ,EAAE;AAAZ,eAAd;;AACA,cAAA,KAAI,CAACI,QAAL,CAAc;AAAEH,gBAAAA,OAAO,EAAEE;AAAX,eAAd;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA,OA9GmB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAoH/B8B,WApH+B,GAoHjB,MAAM;AAClB,WAAK7B,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD,KAtH8B;;AAAA,SAwH/BoC,UAxH+B,GAwHlB,MAAM;AACf,WAAK9B,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACF,KA1H6B;;AAAA,SA4H/BmC,IA5H+B,GA4HxB,MAAM;AACX,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AACD,KA9H8B;AAAA;;AAmBzBC,EAAAA,iBAAN,GAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAClB,MAAI,CAACC,eAAL,EADkB;;AAAA;AAAA;AAAA,mBAElB,MAAI,CAACC,mBAAL,EAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGzB;;AAEKD,EAAAA,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAClBxB,MAAM,CAAC0B,QADW;AAAA;AAAA;AAAA;;AAEpB1B,YAAAA,MAAM,CAAC2B,IAAP,GAAc,IAAIzD,IAAJ,CAAS8B,MAAM,CAAC0B,QAAhB,CAAd;AAFoB;AAAA,mBAGd1B,MAAM,CAAC0B,QAAP,CAAgBE,MAAhB,EAHc;;AAAA;AAAA;AAAA;;AAAA;AAIf,gBAAI5B,MAAM,CAAC2B,IAAX,EAAiB;AACtB3B,cAAAA,MAAM,CAAC2B,IAAP,GAAc,IAAIzD,IAAJ,CAAS8B,MAAM,CAAC2B,IAAP,CAAYE,eAArB,CAAd;AACD,aAFM,MAEA;AACL7B,cAAAA,MAAM,CAAC8B,KAAP,CACE,qEADF;AAGD;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAWvB;;AAEKL,EAAAA,mBAAN,GAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBE,YAAAA,IADoB,GACb3B,MAAM,CAAC2B,IADM;AAAA;AAAA,mBAEHA,IAAI,CAACI,GAAL,CAASC,WAAT,EAFG;;AAAA;AAEpBC,YAAAA,QAFoB;;AAG1B,YAAA,MAAI,CAAC9C,QAAL,CAAc;AAAEV,cAAAA,OAAO,EAAEwD,QAAQ,CAAC,CAAD;AAAnB,aAAd;;AAH0B;AAAA,mBAIFN,IAAI,CAACI,GAAL,CAASG,GAAT,CAAaC,KAAb,EAJE;;AAAA;AAIpBC,YAAAA,SAJoB;AAKpBC,YAAAA,WALoB,GAKNpE,OAAO,CAACqE,QAAR,CAAiBF,SAAjB,CALM;;AAAA,iBAMtBC,WANsB;AAAA;AAAA;AAAA;;AAOlBhD,YAAAA,eAPkB,GAOA,IAAIsC,IAAI,CAACI,GAAL,CAASQ,QAAb,CACtBtE,OAAO,CAACuE,GADc,EAEtBH,WAAW,CAACI,OAFU,CAPA;;AAWxB,YAAA,MAAI,CAACtD,QAAL,CAAc;AAAEE,cAAAA,eAAe,EAAEA;AAAnB,aAAd;;AAXwB;AAAA,mBAYEA,eAAe,CAACC,OAAhB,CAAwBoD,WAAxB,GAAsCC,IAAtC,EAZF;;AAAA;AAYlBD,YAAAA,WAZkB;;AAaxB,YAAA,MAAI,CAACvD,QAAL,CAAc;AAAEuD,cAAAA;AAAF,aAAd;;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,WAA3B;AACSI,YAAAA,CAfe,GAeX,CAfW;;AAAA;AAAA,kBAeRA,CAAC,IAAIJ,WAfG;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBDrD,eAAe,CAACC,OAAhB,CAAwByD,OAAxB,CAAgCD,CAAhC,EAAmCH,IAAnC,EAhBC;;AAAA;AAgBhBK,YAAAA,MAhBgB;AAAA;AAAA,mBAiBD3D,eAAe,CAACC,OAAhB,CAAwB2D,OAAxB,CAAgCH,CAAhC,EAAmCH,IAAnC,EAjBC;;AAAA;AAiBhBO,YAAAA,MAjBgB;AAAA;AAAA,mBAkBD7D,eAAe,CAACC,OAAhB,CAAwB6D,OAAxB,CAAgCL,CAAhC,EAAmCH,IAAnC,EAlBC;;AAAA;AAkBhBS,YAAAA,MAlBgB;AAmBhBC,YAAAA,QAnBgB,qBAmBAL,MAnBA,MAmBWE,MAnBX,MAmBsBE,MAnBtB;;AAoBtB,YAAA,MAAI,CAACjE,QAAL,CAAc;AACZT,cAAAA,MAAM,EAAE,CAAC,GAAG,MAAI,CAACF,KAAL,CAAWE,MAAf,EAAuB2E,QAAvB;AADI,aAAd;;AApBsB;AAeUP,YAAAA,CAAC,EAfX;AAAA;AAAA;;AAAA;AAwBxBF,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,MAAI,CAACrE,KAAL,CAAWE,MAAnC;AAxBwB;AAAA,mBAyBKW,eAAe,CAACC,OAAhB,CAAwBgE,QAAxB,CAAiCrB,QAAQ,CAAC,CAAD,CAAzC,EAA8CU,IAA9C,EAzBL;;AAAA;AAyBlBhE,YAAAA,cAzBkB;;AA0BxB,YAAA,MAAI,CAACQ,QAAL,CAAc;AACZR,cAAAA,cAAc,EAAEA;AADJ,aAAd;;AAGAiE,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAI,CAACrE,KAAL,CAAWG,cAAzC;AA7BwB;AAAA;;AAAA;AAgCxBqB,YAAAA,MAAM,CAAC8B,KAAP,CAAa,mDAAb;;AAhCwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAkC3B;;AAwDDyB,EAAAA,MAAM,GAAG;AAAA;;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAK/E,KAAL,CAAWC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAC8C,GAD9C,EAEG,KAAKD,KAAL,CAAWK,MAAX,IAAmB,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAA5B;AAAqC,MAAA,WAAW,EAAE,KAAKkC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtB,EAGG,KAAKxC,KAAL,CAAWO,QAAX,IAAqB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,OAA3B;AAAoC,MAAA,SAAS,EAAE,KAAKc,SAApD;AAA+D,MAAA,UAAU,EAAE,KAAKmB,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHxB,EAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKC,IAAL,CAAUsC,IAAV,CAAe,IAAf,CADX;AAEE,MAAA,GAAG,EAAEnF,IAFP;AAGE,MAAA,SAAS,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AACE,MAAA,GAAG,EAAEC,WADP;AAEE,MAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVF,CADA,EAaE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACkC,GADlC,EAEE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAEqC,GAFrC,EAGE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAGwC,GAHxC,EAIE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAImC,GAJnC,EAKE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAKqC,GALrC,EAME;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,EAMsC,GANtC,CADF,EAQQ,GARR,CADF,EAUW,GAVX,EAWE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,KAAKE,KAAL,CAAWE,MAAX,CAAkB+E,GAAlB,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrC,aAAOD,KAAK,CAAChD,QAAN,IAAkB,KAAKlC,KAAL,CAAWC,OAA7B,GACL;AAAI,QAAA,GAAG,EAAEkF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkBD,KAAK,CAACE,OAAN,CAAcC,QAAd,EAAlB,MADF,EACoD,GADpD,EAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkBH,KAAK,CAACtD,UAAxB,MAFF,EAE4C,GAF5C,EAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkBsD,KAAK,CAACpD,UAAxB,MAHF,EAG4C,GAH5C,EAIE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkBoD,KAAK,CAAC5C,SAAxB,MAJF,EAI2C,GAJ3C,EAKE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkB,KAAKtC,KAAL,CAAWI,SAAX,CAAqB8E,KAAK,CAACI,WAA3B,CAAlB,MALF,EAKmE,GALnE,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,GADL,EAEKJ,KAAK,CAACI,WAAN,IAAqB,KAArB,GACC;AACE,QAAA,IAAI,EAAEJ,KAAK,CAACE,OADd;AAEE,QAAA,SAAS,EAAC,eAFZ;AAGE,QAAA,OAAO;AAAA,+EAAE,kBAAMG,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,yBACD,MAAI,CAAC9E,YAAL,CAAkB8E,KAAK,CAACC,MAAN,CAAaC,IAA/B,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;AAAA,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAOc,GAPd,CADD,GAUG,IAZR,EAYc,GAZd,CANF,EAmBU,GAnBV,CADK,GAuBH,IAvBJ;AAwBD,KAzBA,CAFH,EA2BM,GA3BN,CAXF,EAuCW,GAvCX,CADA,EAyCS,GAzCT,CAbF,EAwDE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAxDF,EAwD6D,GAxD7D,EAyDE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACkC,GADlC,EAEE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAEsC,GAFtC,EAGE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAGoC,GAHpC,EAIE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAI+B,GAJ/B,CADF,EAMQ,GANR,CADF,EAQW,GARX,EASE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,KAAKzF,KAAL,CAAWE,MAAX,CAAkB+E,GAAlB,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrC,aAAOD,KAAK,CAACI,WAAN,IAAqB,KAArB,IAA6BJ,KAAK,CAACI,WAAN,IAAqB,KAArB,IAA8BJ,KAAK,CAAChD,QAAN,IAAkB,KAAKlC,KAAL,CAAWC,OAAxF,GACL;AAAI,QAAA,GAAG,EAAEkF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkBD,KAAK,CAACE,OAAN,CAAcC,QAAd,EAAlB,MADF,EACoD,GADpD,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEG,KAAKrF,KAAL,CAAWI,SAAX,CAAqB8E,KAAK,CAACI,WAA3B,CAFH,EAE4C,GAF5C,CAFF,EAKQ,GALR,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,GADL,EAEKJ,KAAK,CAACI,WAAN,IAAqB,KAArB,GACC;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,OAAO;AAAA,+EAAE,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,yBACD,MAAI,CAAChD,SAAL,CAAe2C,KAAK,CAACE,OAArB,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;AAAA,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMM,GANN,CADD,GASG,IAXR,EAWc,GAXd,CANF,EAkBU,GAlBV,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEGF,KAAK,CAACI,WAAN,IAAqB,KAArB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,KAAK,CAACQ,UAAN,CAAiBL,QAAjB,EAAJ,CADD,GAEG,IAJN,EAIY,GAJZ,CAnBJ,EAwBU,GAxBV,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEI;AACA,QAAA,SAAS,EAAC,gBADV;AAEE,QAAA,OAAO;AAAA,+EAAE,mBAAME,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,yBACD,MAAI,CAAC5D,QAAL,CAAcuD,KAAK,CAACtD,UAApB,EAA+BsD,KAAK,CAACrD,WAArC,EAAiDqD,KAAK,CAACpD,UAAvD,EAAkEoD,KAAK,CAACnD,YAAxE,EAAqFmD,KAAK,CAAClD,aAA3F,EAAyGkD,KAAK,CAACjD,YAA/G,EAA4HiD,KAAK,CAAChD,QAAlI,EAA2IgD,KAAK,CAAC/C,SAAjJ,EAA2J+C,KAAK,CAAC9C,OAAjK,EAAyK8C,KAAK,CAAC7C,WAA/K,EAA2L6C,KAAK,CAAC5C,SAAjM,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;AAAA,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMW,GANX,CAFJ,EAUG,GAVH,CAzBF,EAoCQ,GApCR,CADK,GAuCH,IAvCJ;AAwCD,KAzCA,CAFH,EA2CM,GA3CN,CATF,EAqDW,GArDX,CAzDF,EA+GW,GA/GX,CADA,CAJF,EAsHS,GAtHT,CADF;AA0HD;;AA1P8B;;AA8PjC,eAAevC,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Addressbar from './Addressbar'\r\nimport Express from '../abis/Express'\r\nimport Web3 from 'web3'\r\nimport Dialog from \"./Dialog\"\r\nimport Grade from \"./Grade\"\r\nimport './App.css'\r\nimport logo from '../images/logo.png'\r\nimport receiverImg from '../images/receiver.jpg'\r\n \r\nclass Receiver extends Component {\r\n  state = {\r\n    account: '',\r\n    orders: [],\r\n    currentCourier: '',\r\n    statusMap: {\r\n      101: 'Waiting to be taken',\r\n      102: 'Waiting for delivery',\r\n      103: 'Delivered, waiting a confirmation',\r\n      104: 'Completed',\r\n      105: 'Cancelled',\r\n      106: 'Completed and Graded'\r\n    },   \r\n    dialog: false,\r\n    message: [],\r\n    canGrade:false,\r\n    gradeId:'',\r\n  }\r\n \r\n  async componentDidMount() {\r\n    await this.getWeb3Provider()\r\n    await this.connectToBlockchain()\r\n  }\r\n \r\n  async getWeb3Provider() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    } else {\r\n      window.alert(\r\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\r\n      )\r\n    }\r\n  }\r\n \r\n  async connectToBlockchain() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Express.networks[networkId]\r\n    if (networkData) {\r\n      const deployedExpress = new web3.eth.Contract(\r\n        Express.abi,\r\n        networkData.address,\r\n      )\r\n      this.setState({ deployedExpress: deployedExpress })\r\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\r\n      this.setState({ totalNumber })\r\n      console.log('totalNumber', totalNumber)\r\n      for (var i = 1; i <= totalNumber; i++) {\r\n        const order1 = await deployedExpress.methods.orders1(i).call()\r\n        const order2 = await deployedExpress.methods.orders2(i).call()\r\n        const order3 = await deployedExpress.methods.orders3(i).call()\r\n        const orderAll = { ...order1, ...order2, ...order3 }\r\n        this.setState({\r\n          orders: [...this.state.orders, orderAll],\r\n        })\r\n      }\r\n      console.log('myOrders', this.state.orders)\r\n      const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\r\n      this.setState({\r\n        currentCourier: currentCourier\r\n      })\r\n      console.log('currentCourier', this.state.currentCourier);\r\n \r\n    } else {\r\n      window.alert('Express contract is not found in your blockchain.')\r\n    }\r\n  }\r\n \r\n  confirmOrder = async (_orderId) => {\r\n    this.setState({ loading: true })\r\n    const gasAmount = await this.state.deployedExpress.methods\r\n      .confirmOrder(_orderId)\r\n      .estimateGas({ from: this.state.account })\r\n    this.state.deployedExpress.methods\r\n      .confirmOrder(_orderId)\r\n      .send({ from: this.state.account, gas: gasAmount })\r\n      .once('receipt', receipt => {\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n \r\n  makeGrade = async (_orderId, _grade) => {\r\n    this.setState({ loading: true })\r\n    const gasAmount = await this.state.deployedExpress.methods\r\n      .makeGrade(_orderId, _grade)\r\n      .estimateGas({ from: this.state.account })\r\n    this.state.deployedExpress.methods\r\n      .makeGrade(_orderId, _grade)\r\n      .send({ from: this.state.account, gas: gasAmount })\r\n      .once('receipt', receipt => {\r\n        this.setState({ loading: false })\r\n        window.location.reload();\r\n      })\r\n  }\r\n \r\n \r\n  //open the dialog\r\n  showInfo = async (senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) => {\r\n    this.setState({\r\n      dialog: true,\r\n      message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\r\n    })\r\n \r\n  }\r\n\r\n  showGrade = async (_orderId) =>{\r\n       this.setState({ canGrade: true })\r\n       this.setState({ gradeId: _orderId })\r\n   }\r\n \r\n  //close the dialog\r\n  closeDialog = () => {\r\n    this.setState({dialog: false})\r\n  }\r\n\r\n  closeGrade = () => {\r\n\t     this.setState({ canGrade: false })\r\n   }\r\n  \r\n  Home = () => {\r\n    this.props.history.push({ pathname: '/' })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Addressbar account={this.state.account} />{' '}\r\n        {this.state.dialog&&<Dialog message={this.state.message} closeDialog={this.closeDialog}/>}\r\n        {this.state.canGrade&&<Grade gradeId={this.state.gradeId} makeGrade={this.makeGrade} closeGrade={this.closeGrade}/>}\r\n        <div className=\"container-fluid mt-5\">\r\n        <div className=\"mybody\">\r\n        <div className=\"title\">\r\n          <img\r\n            onClick={this.Home.bind(this)}\r\n            src={logo}\r\n            className=\"logoimg2\"\r\n          ></img>\r\n          <img\r\n            src={receiverImg}\r\n            className=\"logoimg5\"\r\n          ></img>\r\n          <h2 className=\"orderH\"> All Orders To Be Confirmed </h2>\r\n          </div>\r\n          <div className=\"table1\">\r\n          <table className=\"table\">\r\n            <thead id=\"orderList\">\r\n              <tr>\r\n                <th scope=\"col\"> #OrderId </th>{' '}\r\n                <th scope=\"col\"> Sender Name </th>{' '}\r\n                <th scope=\"col\"> Sender Address </th>{' '}\r\n                <th scope=\"col\"> Item Type </th>{' '}\r\n                <th scope=\"col\"> Order Status</th>{' '}\r\n                <th scope=\"col\"> Confirm Order</th>{' '}\r\n              </tr>{' '}\r\n            </thead>{' '}\r\n            <tbody id=\"orderList\">\r\n              {' '}\r\n              {this.state.orders.map((order, key) => {\r\n                return order.receiver == this.state.account? (\r\n                  <tr key={key}>\r\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\r\n                    <td scope=\"row\"> {order.senderName} </td>{' '}\r\n                    <td scope=\"row\"> {order.pickupAddr} </td>{' '}\r\n                    <td scope=\"row\"> {order.orderType} </td>{' '}\r\n                    <td scope=\"row\"> {this.state.statusMap[order.orderStatus]} </td>{' '}\r\n                    <td>\r\n                        {' '}\r\n                        {order.orderStatus == '103' ? (\r\n                          <button\r\n                            name={order.orderId}\r\n                            className=\"confirmButton\"\r\n                            onClick={async event => {\r\n                              await this.confirmOrder(event.target.name)\r\n                            }}\r\n                          >\r\n                          Confirm Order{' '}\r\n                          </button>\r\n                        ) : null}{' '}\r\n                      </td>{' '}\r\n              \r\n                  </tr>\r\n                ) : null\r\n              })}{' '}\r\n            </tbody>{' '}\r\n          </table>{' '}\r\n          </div>\r\n          <h2 className=\"orderRecordsH\"> Your Confirmed Orders </h2>{' '}\r\n          <table className=\"table\">\r\n            <thead id=\"orderList\">\r\n              <tr>\r\n                <th scope=\"col\"> #OrderId </th>{' '}\r\n                <th scope=\"col\"> Order Status </th>{' '}\r\n                <th scope=\"col\"> Make Grade </th>{' '}\r\n                <th scope=\"col\"> Grade </th>{' '}\r\n              </tr>{' '}\r\n            </thead>{' '}\r\n            <tbody id=\"orderList\">\r\n              {' '}\r\n              {this.state.orders.map((order, key) => {\r\n                return order.orderStatus == '104' ||order.orderStatus == '106' && order.receiver == this.state.account ? (\r\n                  <tr key={key}>\r\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\r\n                    <td>\r\n                      {' '}\r\n                      {this.state.statusMap[order.orderStatus]}{' '}\r\n                    </td>{' '}\r\n                    <td>\r\n                        {' '}\r\n                        {order.orderStatus == '104' ? (\r\n                          <button\r\n                            className=\"makeButton\"\r\n                            onClick={async event => {\r\n                              await this.showGrade(order.orderId)\r\n                            }}\r\n                          >\r\n                          Grade{' '}\r\n                          </button>\r\n                        ) : null}{' '}\r\n                      </td>{' '}\r\n                      <td>\r\n                        {' '}\r\n                        {order.orderStatus == '106' ? (\r\n                          <p>{order.orderGrade.toString()}</p>\r\n                        ) : null}{' '}\r\n                      </td>{' '}\r\n                    <td>\r\n                      {' '}\r\n                        <button\r\n                        className=\"showInfoButton\"\r\n                          onClick={async event => {                         \r\n                            await this.showInfo(order.senderName,order.senderPhone,order.pickupAddr,order.receiverName,order.receiverPhone,order.shippingAddr,order.receiver,order.startTime,order.endTime,order.orderWeight,order.orderType)\r\n                          }}\r\n                        >\r\n                          showInfo{' '}\r\n                        </button>\r\n                      {' '}\r\n                    </td>{' '}\r\n                  </tr>\r\n                ) : null\r\n              })}{' '}\r\n            </tbody>{' '}\r\n          </table>{' '}\r\n          </div>\r\n        </div>{' '}\r\n      </div>\r\n    )\r\n  }\r\n \r\n}\r\n \r\nexport default Receiver\r\n \r\n\r\n"]},"metadata":{},"sourceType":"module"}