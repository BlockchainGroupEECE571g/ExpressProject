{"ast":null,"code":"import _objectSpread from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\571G\\\\ExpressDappReact\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\n\nclass Courier extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: '',\n      statusMap: {\n        101: 'Waiting to be taken',\n        102: 'Waiting for delivery',\n        103: 'Delivered, waiting a confirmation',\n        104: 'Completed',\n        105: 'Cancelled'\n      }\n    };\n\n    this.takeOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.deliverOrder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.handleTakeOrder = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              r = window.confirm('Are you sure to taking order ' + e.target.name + '?');\n\n              if (!(r == true)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return _this.takeOrder(e.target.name, 1);\n\n            case 4:\n              _context3.next = 6;\n              break;\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context4.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context5.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context5.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context5.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            web3 = window.web3;\n            _context6.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context6.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context6.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context6.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context6.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context6.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context6.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context6.next = 33;\n              break;\n            }\n\n            _context6.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context6.sent;\n            _context6.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context6.sent;\n            _context6.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context6.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context6.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context6.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context6.sent;\n\n            _this3.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this3.state.currentCourier);\n            _context6.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \" \", React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" All Orders To Be Taken \"), \" \", React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" #OrderId \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Pickup Address \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Shipping Address \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Order Type \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" Pickup Time \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Expected Delivery Time \"), \" \"), \" \"), \" \", React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" \", this.state.orders.map((order, key) => {\n      return order.orderStatus == '101' && order.courier != this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" \", order.shippingAddr, \" \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" \", order.startTime.toString(), \": 00 \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" \", order.endTime.toString(), \": 00 \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: this.handleTakeOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Take Order \"), \" \"), \" \") : null;\n    }), \" \"), \" \"), \" \", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" Your Taken Orders \"), \" \", React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" #OrderId \"), \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Order Status \"), \" \"), \" \"), \" \", React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" \", this.state.orders.map((order, key) => {\n      return order.courier == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \" \", this.state.statusMap[order.orderStatus], \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \" \", order.orderStatus == '102' ? React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return _this4.deliverOrder(event.target.name, 11);\n\n                case 2:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          }));\n\n          return function (_x6) {\n            return _ref4.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Deliver Order \") : null, \" \"), \" \") : null;\n    }), \" \"), \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["C:/571G/ExpressDappReact/src/components/Courier.js"],"names":["React","Component","Addressbar","Express","Web3","Courier","state","account","orders","currentCourier","statusMap","takeOrder","_orderId","_currentTime","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","deliverOrder","handleTakeOrder","e","r","window","confirm","target","name","componentDidMount","getWeb3Provider","connectToBlockchain","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render","map","order","key","orderStatus","courier","orderId","toString","pickupAddr","shippingAddr","orderType","startTime","endTime","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\n\nclass Courier extends Component {\n    state = {\n        account: '',\n        orders: [],\n        currentCourier: '',\n        statusMap: {\n            101: 'Waiting to be taken',\n            102: 'Waiting for delivery',\n            103: 'Delivered, waiting a confirmation',\n            104: 'Completed',\n            105: 'Cancelled',\n        },\n    }\n\n    async componentDidMount() {\n        await this.getWeb3Provider()\n        await this.connectToBlockchain()\n    }\n\n    async getWeb3Provider() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert(\n                'Non-Ethereum browser detected. You should consider trying MetaMask!',\n            )\n        }\n    }\n    async connectToBlockchain() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Express.networks[networkId]\n        if (networkData) {\n            const deployedExpress = new web3.eth.Contract(\n                Express.abi,\n                networkData.address,\n            )\n            this.setState({ deployedExpress: deployedExpress })\n            const totalNumber = await deployedExpress.methods.totalNumber().call()\n            this.setState({ totalNumber })\n            console.log('totalNumber', totalNumber)\n            for (var i = 1; i <= totalNumber; i++) {\n                const order1 = await deployedExpress.methods.orders1(i).call()\n                const order2 = await deployedExpress.methods.orders2(i).call()\n                const order3 = await deployedExpress.methods.orders3(i).call()\n                const orderAll = {...order1, ...order2, ...order3 }\n                this.setState({\n                    orders: [...this.state.orders, orderAll],\n                })\n            }\n            console.log('myOrders', this.state.orders)\n            const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\n            this.setState({\n                currentCourier: currentCourier\n            })\n            console.log('currentCourier', this.state.currentCourier);\n\n        } else {\n            window.alert('Express contract is not found in your blockchain.')\n        }\n    }\n    takeOrder = async(_orderId, _currentTime) => {\n        this.setState({ loading: true })\n        const gasAmount = await this.state.deployedExpress.methods\n            .takeOrder(_orderId, _currentTime)\n            .estimateGas({ from: this.state.account })\n        this.state.deployedExpress.methods\n            .takeOrder(_orderId, _currentTime)\n            .send({ from: this.state.account, gas: gasAmount })\n            .once('receipt', receipt => {\n                this.setState({ loading: false })\n            })\n    }\n    deliverOrder = async(_orderId, _currentTime) => {\n        this.setState({ loading: true })\n        const gasAmount = await this.state.deployedExpress.methods\n            .deliverOrder(_orderId, _currentTime)\n            .estimateGas({ from: this.state.account })\n        this.state.deployedExpress.methods\n            .deliverOrder(_orderId, _currentTime)\n            .send({ from: this.state.account, gas: gasAmount })\n            .once('receipt', receipt => {\n                this.setState({ loading: false })\n            })\n    }\n\n    handleTakeOrder = async e => {\n        var r = window.confirm(\n            'Are you sure to taking order ' + e.target.name + '?',\n        )\n        if (r == true) {\n            // var myDate = new Date();\n            // const currentTime = myDate.getHours()+1;\n            // console.log(currentTime)\n            await this.takeOrder(e.target.name, 1)\n        } else {}\n    }\n\n    render() {\n        return ( <\n            div >\n            <\n            Addressbar account = { this.state.account }\n            /> <\n            div className = \"container-fluid mt-5\" >\n            <\n            h2 > All Orders To Be Taken < /h2> <\n            table className = \"table\" >\n            <\n            thead id = \"orderList\" >\n            <\n            tr >\n            <\n            th scope = \"col\" > #OrderId < /th> <\n            th scope = \"col\" > Pickup Address < /th> <\n            th scope = \"col\" > Shipping Address < /th> <\n            th scope = \"col\" > Order Type < /th> <\n            th scope = \"col\" > Pickup Time < /th> <\n            th scope = \"col\" > Expected Delivery Time < /th> <\n            /tr> <\n            /thead> <\n            tbody id = \"orderList\" > {\n                this.state.orders.map((order, key) => {\n                    return order.orderStatus == '101' && order.courier != this.state.account ? ( <\n                        tr key = { key } >\n                        <\n                        th scope = \"row\" > { order.orderId.toString() } < /th> <\n                        th scope = \"row\" > { order.pickupAddr } < /th> <\n                        th scope = \"row\" > { order.shippingAddr } < /th> <\n                        th scope = \"row\" > { order.orderType } < /th> <\n                        th scope = \"row\" > { order.startTime.toString() }: 00 < /th> <\n                        th scope = \"row\" > { order.endTime.toString() }: 00 < /th> <\n                        td >\n                        <\n                        button name = { order.orderId }\n                        onClick = { this.handleTakeOrder } >\n                        Take Order <\n                        /button> <\n                        /td> <\n                        /tr>\n                    ) : null\n                })\n            } <\n            /tbody> <\n            /table> <\n            h2 > Your Taken Orders < /h2> <\n            table className = \"table\" >\n            <\n            thead id = \"orderList\" >\n            <\n            tr >\n            <\n            th scope = \"col\" > #OrderId < /th> <\n            th scope = \"col\" > Order Status < /th> <\n            /tr> <\n            /thead> <\n            tbody id = \"orderList\" > {\n                this.state.orders.map((order, key) => {\n                    return order.courier == this.state.account ? ( <\n                        tr key = { key } >\n                        <\n                        th scope = \"row\" > { order.orderId.toString() } < /th> <\n                        th scope = \"row\" > { this.state.statusMap[order.orderStatus] } < /th> <\n                        td > {\n                            order.orderStatus == '102' ? ( <\n                                button name = { order.orderId }\n                                onClick = {\n                                    async event => {\n                                        await this.deliverOrder(\n                                            event.target.name, 11\n                                        )\n                                    }\n                                } >\n                                Deliver Order <\n                                /button>\n                            ) : null\n                        } <\n                        /td> <\n                        /tr>\n                    ) : null\n                })\n            } <\n            /tbody> <\n            /table> <\n            /div> <\n            /div>\n        )\n    }\n}\n\nexport default Courier"]},"metadata":{},"sourceType":"module"}