{"ast":null,"code":"import _objectSpread from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\571G\\\\ExpressProject\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\nimport Dialog from \"./Dialog\";\nimport './App.css';\nimport logo from '../images/logo.png';\nimport courierCar from '../images/courier-car.jpg';\n\nclass Courier extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: '',\n      statusMap: {\n        101: 'Waiting to be taken',\n        102: 'Waiting for delivery',\n        103: 'Delivered, waiting a confirmation',\n        104: 'Completed',\n        105: 'Cancelled'\n      },\n      loading2: false,\n      dialog: false,\n      message: []\n    };\n\n    this.takeOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.deliverOrder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.handleTakeOrder = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              r = window.confirm('Are you sure to taking order ' + e.target.name + '?');\n\n              if (!(r == true)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return _this.takeOrder(e.target.name, 1);\n\n            case 4:\n              _context3.next = 6;\n              break;\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.showInfo = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                loading2: true\n              });\n\n              _this.setState({\n                dialog: true,\n                message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n                loading2: false\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n\n      return function (_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.closeDialog = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n\n    this.Home = () => {\n      this.props.history.push({\n        pathname: '/'\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context5.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context6.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context6.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context6.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            web3 = window.web3;\n            _context7.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context7.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context7.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context7.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context7.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context7.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context7.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context7.next = 33;\n              break;\n            }\n\n            _context7.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context7.sent;\n            _context7.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context7.sent;\n            _context7.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context7.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context7.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context7.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context7.sent;\n\n            _this3.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this3.state.currentCourier);\n            _context7.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), ' ', \" \", this.state.dialog && React.createElement(Dialog, {\n      message: this.state.message,\n      closeDialog: this.closeDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), \" \", React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mybody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: this.Home.bind(this),\n      src: logo,\n      className: \"logoimg2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), \" \", React.createElement(\"img\", {\n      src: courierCar,\n      className: \"logoimg4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \" \", React.createElement(\"h2\", {\n      className: \"orderH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" All Orders To Be Taken \"), \" \"), \" \", React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \" Pickup Address \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" Shipping Address \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \" Order Type \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" Pickup Time \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \" Expected Delivery Time \"), ' ', \" \"), ' ', \" \"), ' ', \" \", React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" \", ' ', \" \", this.state.orders.map((order, key) => {\n      return order.orderStatus == '101' && order.parcelSender != this.state.account && order.receiver != this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \" \", order.shippingAddr, \" \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" \", order.startTime.toString(), \": 00 \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \" \", order.endTime.toString(), \": 00 \"), ' ', \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: this.handleTakeOrder,\n        className: \"deliverButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Take Order \", ' ', \" \"), ' ', \" \"), ' ', \" \") : null;\n    }), \" \", ' ', \" \"), ' ', \" \"), ' ', \" \"), \" \", React.createElement(\"h2\", {\n      className: \"orderRecordsH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" Your Taken Orders \"), ' ', \" \", React.createElement(\"div\", {\n      className: \"table2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', \" \", React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \" Order Status \"), ' ', \" \"), ' ', \" \"), ' ', \" \", React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \" \", ' ', \" \", this.state.orders.map((order, key) => {\n      return order.courier == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', \" \", React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" \", ' ', \" \", this.state.statusMap[order.orderStatus], \" \", ' ', \" \"), ' ', \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \" \", ' ', \" \", order.orderStatus == '102' ? React.createElement(\"button\", {\n        className: \"deliverButton\",\n        name: order.orderId,\n        onClick: /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return _this4.deliverOrder(event.target.name, 11);\n\n                case 2:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }));\n\n          return function (_x17) {\n            return _ref5.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Deliver Order \", ' ', \" \") : null, \" \", ' ', \" \"), ' ', \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \" \", ' ', React.createElement(\"button\", {\n        className: \"showInfoButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n            return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _this4.showInfo(order.senderName, order.senderPhone, order.pickupAddr, order.receiverName, order.receiverPhone, order.shippingAddr, order.receiver, order.startTime, order.endTime, order.orderWeight, order.orderType);\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }));\n\n          return function (_x18) {\n            return _ref6.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"showInfo \", ' ', \" \"), \" \", ' ', \" \"), ' ', \" \") : null;\n    }), \" \", ' ', \" \"), ' ', \" \"), ' ', \" \"), \" \", React.createElement(\"div\", {\n      className: \"showScore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \" Your current Score: \", this.state.currentCourier.courierGrade, \" \"), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \" Total Number of received grades: \", this.state.currentCourier.totalGradesNum, \" \"), \" \"), \" \"), \" \"), ' ', \" \");\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["C:/571G/ExpressProject/src/components/Courier.js"],"names":["React","Component","Addressbar","Express","Web3","Dialog","logo","courierCar","Courier","state","account","orders","currentCourier","statusMap","loading2","dialog","message","takeOrder","_orderId","_currentTime","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","deliverOrder","handleTakeOrder","e","r","window","confirm","target","name","showInfo","senderName","senderPhone","pickupAddr","receiverName","receiverPhone","shippingAddr","receiver","startTime","endTime","orderWeight","orderType","closeDialog","Home","props","history","push","pathname","componentDidMount","getWeb3Provider","connectToBlockchain","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render","bind","map","order","key","orderStatus","parcelSender","orderId","toString","courier","event","courierGrade","totalGradesNum"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\nimport Dialog from \"./Dialog\"\nimport './App.css'\nimport logo from '../images/logo.png'\nimport courierCar from '../images/courier-car.jpg'\n\n\nclass Courier extends Component {\n    state = {\n        account: '',\n        orders: [],\n        currentCourier: '',\n        statusMap: {\n            101: 'Waiting to be taken',\n            102: 'Waiting for delivery',\n            103: 'Delivered, waiting a confirmation',\n            104: 'Completed',\n            105: 'Cancelled',\n        },\n        loading2: false,\n        dialog: false,\n        message: []\n    }\n\n    async componentDidMount() {\n        await this.getWeb3Provider()\n        await this.connectToBlockchain()\n    }\n\n    async getWeb3Provider() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert(\n                'Non-Ethereum browser detected. You should consider trying MetaMask!',\n            )\n        }\n    }\n    async connectToBlockchain() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Express.networks[networkId]\n        if (networkData) {\n            const deployedExpress = new web3.eth.Contract(\n                Express.abi,\n                networkData.address,\n            )\n            this.setState({ deployedExpress: deployedExpress })\n            const totalNumber = await deployedExpress.methods.totalNumber().call()\n            this.setState({ totalNumber })\n            console.log('totalNumber', totalNumber)\n            for (var i = 1; i <= totalNumber; i++) {\n                const order1 = await deployedExpress.methods.orders1(i).call()\n                const order2 = await deployedExpress.methods.orders2(i).call()\n                const order3 = await deployedExpress.methods.orders3(i).call()\n                const orderAll = {...order1, ...order2, ...order3 }\n                this.setState({\n                    orders: [...this.state.orders, orderAll],\n                })\n            }\n            console.log('myOrders', this.state.orders)\n            const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\n            this.setState({\n                currentCourier: currentCourier\n            })\n            console.log('currentCourier', this.state.currentCourier);\n\n        } else {\n            window.alert('Express contract is not found in your blockchain.')\n        }\n    }\n    takeOrder = async(_orderId, _currentTime) => {\n        this.setState({ loading: true })\n        const gasAmount = await this.state.deployedExpress.methods\n            .takeOrder(_orderId, _currentTime)\n            .estimateGas({ from: this.state.account })\n        this.state.deployedExpress.methods\n            .takeOrder(_orderId, _currentTime)\n            .send({ from: this.state.account, gas: gasAmount })\n            .once('receipt', receipt => {\n                this.setState({ loading: false })\n            })\n    }\n    deliverOrder = async(_orderId, _currentTime) => {\n        this.setState({ loading: true })\n        const gasAmount = await this.state.deployedExpress.methods\n            .deliverOrder(_orderId, _currentTime)\n            .estimateGas({ from: this.state.account })\n        this.state.deployedExpress.methods\n            .deliverOrder(_orderId, _currentTime)\n            .send({ from: this.state.account, gas: gasAmount })\n            .once('receipt', receipt => {\n                this.setState({ loading: false })\n            })\n    }\n\n    handleTakeOrder = async e => {\n        var r = window.confirm(\n            'Are you sure to taking order ' + e.target.name + '?',\n        )\n        if (r == true) {\n            // var myDate = new Date();\n            // const currentTime = myDate.getHours()+1;\n            // console.log(currentTime)\n            await this.takeOrder(e.target.name, 1)\n        } else {}\n    }\n\n    //open the dialog\n    showInfo = async(senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) => {\n        this.setState({\n            loading2: true\n        })\n\n        this.setState({\n            dialog: true,\n            message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n            loading2: false\n        })\n\n    }\n\n    //close the dialog\n    closeDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    }\n    Home = () => {\n        this.props.history.push({ pathname: '/' })\n    }\n\n    render() {\n        return ( <\n            div >\n            <\n            Addressbar account = { this.state.account }\n            />{' '} {\n                this.state.dialog && < Dialog message = { this.state.message }\n                closeDialog = { this.closeDialog }\n                />} <\n                div className = \"container-fluid mt-5\" >\n                    <\n                    div className = \"mybody\" >\n                    <\n                    div className = \"title\" >\n                    <\n                    img\n                onClick = { this.Home.bind(this) }\n                src = { logo }\n                className = \"logoimg2\" >\n                    < /img> <\n                    img\n                src = { courierCar }\n                className = \"logoimg4\" >\n                    < /img> <\n                    h2 className = \"orderH\" > All Orders To Be Taken < /h2> <\n                    /div> <\n                    div className = \"table1\" >\n                    <\n                    table className = \"table\" >\n                    <\n                    thead id = \"orderList\" >\n                    <\n                    tr >\n                    <\n                    th scope = \"col\" > #OrderId < /th>{' '} <\n                    th scope = \"col\" > Pickup Address < /th>{' '} <\n                    th scope = \"col\" > Shipping Address < /th>{' '} <\n                    th scope = \"col\" > Order Type < /th>{' '} <\n                    th scope = \"col\" > Pickup Time < /th>{' '} <\n                    th scope = \"col\" > Expected Delivery Time < /th>{' '} <\n                    /tr>{' '} <\n                    /thead>{' '} <\n                    tbody id = \"orderList\" > { ' ' } {\n                        this.state.orders.map((order, key) => {\n                            return order.orderStatus == '101' &&\n                                order.parcelSender != this.state.account && order.receiver != this.state.account ? ( <\n                                    tr key = { key } >\n                                    <\n                                    th scope = \"row\" > { order.orderId.toString() } < /th>{' '} <\n                                    th scope = \"row\" > { order.pickupAddr } < /th>{' '} <\n                                    th scope = \"row\" > { order.shippingAddr } < /th>{' '} <\n                                    th scope = \"row\" > { order.orderType } < /th>{' '} <\n                                    th scope = \"row\" > { order.startTime.toString() }: 00 < /th>{' '} <\n                                    th scope = \"row\" > { order.endTime.toString() }: 00 < /th>{' '} <\n                                    td >\n                                    <\n                                    button name = { order.orderId }\n                                    onClick = { this.handleTakeOrder }\n                                    className = \"deliverButton\" >\n                                    Take Order { ' ' } <\n                                    /button>{' '} <\n                                    /td>{' '} <\n                                    /tr>\n                                ) : null\n                        })\n                    } { ' ' } <\n                    /tbody>{' '} <\n                    /table>{' '} <\n                    /div> <\n                    h2 className = \"orderRecordsH\" > Your Taken Orders < /h2>{' '} <\n                    div className = \"table2\" >\n                    <\n                    table className = \"table\" >\n                    <\n                    thead id = \"orderList\" >\n                    <\n                    tr >\n                    <\n                    th scope = \"col\" > #OrderId < /th>{' '} <\n                    th scope = \"col\" > Order Status < /th>{' '} <\n                    /tr>{' '} <\n                    /thead>{' '} <\n                    tbody id = \"orderList\" > { ' ' } {\n                        this.state.orders.map((order, key) => {\n                            return order.courier == this.state.account ? ( <\n                                tr key = { key } >\n                                <\n                                th scope = \"row\" > { order.orderId.toString() } < /th>{' '} <\n                                th scope = \"row\" > { ' ' } { this.state.statusMap[order.orderStatus] } { ' ' } <\n                                /th>{' '} <\n                                td > { ' ' } {\n                                    order.orderStatus == '102' ? ( <\n                                        button className = \"deliverButton\"\n                                        name = { order.orderId }\n                                        onClick = {\n                                            async event => {\n                                                await this.deliverOrder(event.target.name, 11)\n                                            }\n                                        } >\n                                        Deliver Order { ' ' } <\n                                        /button>\n                                    ) : null\n                                } { ' ' } <\n                                /td>{' '} <\n                                td > { ' ' }\n\n                                <\n                                button className = \"showInfoButton\"\n                                onClick = {\n                                    async event => {\n                                        await this.showInfo(order.senderName, order.senderPhone, order.pickupAddr, order.receiverName, order.receiverPhone, order.shippingAddr, order.receiver, order.startTime, order.endTime, order.orderWeight, order.orderType)\n                                    }\n                                } >\n                                showInfo { ' ' } <\n                                /button> { ' ' } <\n                                /td>{' '} <\n                                /tr>\n                            ) : null\n                        })\n                    } { ' ' } <\n                    /tbody>{' '} <\n                    /table>{' '} <\n                    /div> <\n                    div className = \"showScore\" >\n                    <\n                    span > Your current Score: { this.state.currentCourier.courierGrade } < /span> <\n                    span > Total Number of received grades: { this.state.currentCourier.totalGradesNum } < /span> <\n                    /div> <\n                    /div> <\n                    /div>{' '} <\n                    /div>\n            )\n        }\n    }\n\n    export default Courier"]},"metadata":{},"sourceType":"module"}