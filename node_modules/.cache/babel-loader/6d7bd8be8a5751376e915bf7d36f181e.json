{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\n\nclass Courier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recvData: {},\n      Data: 0\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var recvParam;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (_this.props.location && _this.props.location.query) {\n              //To see if parameters exist\n              recvParam = _this.props.location.query;\n              sessionStorage.setItem('recvData', JSON.stringify(recvParam)); // store recvParam in sessionStorage\n            } else {\n              recvParam = JSON.parse(sessionStorage.getItem('recvData'));\n            }\n\n            _this.setState({\n              recvData: recvParam\n            });\n\n            _this.setState({\n              Data: 1\n            });\n\n            console.log('recvParam', JSON.parse(sessionStorage.getItem('recvData')));\n            console.log('recvData', _this.state);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"aaaaa \", this.state.recvData.tn);\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["D:/EECE-571G/ExpressDappReact/src/components/Courier.js"],"names":["React","Component","Courier","constructor","props","state","recvData","Data","componentDidMount","location","query","recvParam","sessionStorage","setItem","JSON","stringify","parse","getItem","setState","console","log","render","tn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,IAAI,EAAC;AAFD,KAJW;AAGlB;;AAKKC,EAAAA,iBAAN,GAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxB,gBAAI,KAAI,CAACJ,KAAL,CAAWK,QAAX,IAAuB,KAAI,CAACL,KAAL,CAAWK,QAAX,CAAoBC,KAA/C,EAAsD;AACpD;AACAC,cAAAA,SAAS,GAAG,KAAI,CAACP,KAAL,CAAWK,QAAX,CAAoBC,KAAhC;AACAE,cAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAnC,EAHoD,CAGU;AAC/D,aAJD,MAIO;AACLA,cAAAA,SAAS,GAAIG,IAAI,CAACE,KAAL,CAAWJ,cAAc,CAACK,OAAf,CAAuB,UAAvB,CAAX,CAAb;AACD;;AACD,YAAA,KAAI,CAACC,QAAL,CAAc;AACZZ,cAAAA,QAAQ,EAAEK;AADE,aAAd;;AAGA,YAAA,KAAI,CAACO,QAAL,CAAc;AACZX,cAAAA,IAAI,EAAC;AADO,aAAd;;AAIAY,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,IAAI,CAACE,KAAL,CAAWJ,cAAc,CAACK,OAAf,CAAuB,UAAvB,CAAX,CAAzB;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAI,CAACf,KAA7B;;AAlBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBzB;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyB,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,EAA7C,CAAR;AACD;;AAhC6B;;AAmChC,eAAepB,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Courier extends Component {\n  constructor(props) {\n    super(props);\n \n  }\n  state = {\n      recvData: {},\n      Data:0\n    }\n  async componentDidMount() {\n    let recvParam\n\n    if (this.props.location && this.props.location.query) {\n      //To see if parameters exist\n      recvParam = this.props.location.query;\n      sessionStorage.setItem('recvData', JSON.stringify(recvParam)) // store recvParam in sessionStorage\n    } else {\n      recvParam =  JSON.parse(sessionStorage.getItem('recvData'));\n    }\n    this.setState({\n      recvData: recvParam\n    })\n    this.setState({\n      Data:1\n    })\n\n    console.log('recvParam', JSON.parse(sessionStorage.getItem('recvData')));\n    console.log('recvData', this.state);\n  }\n\n  render() {\n    return (<div id=\"content\">aaaaa {this.state.recvData.tn}</div>)\n  }\n}\n\nexport default Courier;\n"]},"metadata":{},"sourceType":"module"}