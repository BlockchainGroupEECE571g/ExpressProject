{"ast":null,"code":"import _objectSpread from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\571G\\\\ExpressProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\571G\\\\ExpressProject\\\\src\\\\components\\\\Receiver.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\nimport Dialog from \"./Dialog\";\nimport './App.css';\nimport logo from '../images/logo.png';\nimport receiverImg from '../images/receiver.jpg';\n\nclass Receiver extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: '',\n      statusMap: {\n        101: 'Waiting to be taken',\n        102: 'Waiting for delivery',\n        103: 'Delivered, waiting a confirmation',\n        104: 'Completed',\n        105: 'Cancelled'\n      },\n      loading2: false,\n      dialog: false,\n      message: []\n    };\n\n    this.confirmOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.confirmOrder(_orderId).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.confirmOrder(_orderId).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.makeGrade = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_orderId, _grade) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.makeGrade(_orderId, _grade).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.makeGrade(_orderId, _grade).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.showInfo = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                loading2: true\n              });\n\n              _this.setState({\n                dialog: true,\n                message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n                loading2: false\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.closeDialog = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n\n    this.Home = () => {\n      this.props.history.push({\n        pathname: '/'\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context4.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context5.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context5.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context5.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            web3 = window.web3;\n            _context6.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context6.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context6.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context6.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context6.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context6.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context6.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context6.next = 33;\n              break;\n            }\n\n            _context6.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context6.sent;\n            _context6.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context6.sent;\n            _context6.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context6.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context6.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context6.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context6.sent;\n\n            _this3.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this3.state.currentCourier);\n            _context6.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), ' ', this.state.dialog && React.createElement(Dialog, {\n      message: this.state.message,\n      closeDialog: this.closeDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mybody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: this.Home.bind(this),\n      src: logo,\n      className: \"logoimg2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: receiverImg,\n      className: \"logoimg5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"orderH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" All Orders To Be Confirmed \")), React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" ParcelSender Name \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" ParcelSender Address \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" Item Type \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" Confirm Order\"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" Grade Courier\"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.receiver == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \" \", order.senderName, \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, ' ', order.orderStatus == '103' ? React.createElement(\"button\", {\n        name: order.orderId,\n        className: \"confirmButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return _this4.confirmOrder(event.target.name);\n\n                case 2:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          }));\n\n          return function (_x15) {\n            return _ref4.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Confirm Order\", ' ') : Confirmed, ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, ' ', order.orderStatus == '104' ? React.createElement(\"button\", {\n        name: order.orderId,\n        className: \"makeButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return _this4.makeGrade(event.target.name);\n\n                case 2:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }));\n\n          return function (_x16) {\n            return _ref5.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Grade\", ' ') : null, ' '), ' ') : null;\n    }), ' '), ' '), ' '), React.createElement(\"h2\", {\n      className: \"orderRecordsH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \" Your Confirmed Orders \"), ' ', React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" Order Status \"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.orderStatus == '104' && order.receiver == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, ' ', this.state.statusMap[order.orderStatus], ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, ' ', React.createElement(\"button\", {\n        className: \"showInfoButton\",\n        onClick: /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n            return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _this4.showInfo(order.senderName, order.senderPhone, order.pickupAddr, order.receiverName, order.receiverPhone, order.shippingAddr, order.receiver, order.startTime, order.endTime, order.orderWeight, order.orderType);\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }));\n\n          return function (_x17) {\n            return _ref6.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"showInfo\", ' '), ' '), ' ') : null;\n    }), ' '), ' '), ' ')), ' ');\n  }\n\n}\n\nexport default Receiver;","map":{"version":3,"sources":["C:/571G/ExpressProject/src/components/Receiver.js"],"names":["React","Component","Addressbar","Express","Web3","Dialog","logo","receiverImg","Receiver","state","account","orders","currentCourier","statusMap","loading2","dialog","message","confirmOrder","_orderId","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","makeGrade","_grade","showInfo","senderName","senderPhone","pickupAddr","receiverName","receiverPhone","shippingAddr","receiver","startTime","endTime","orderWeight","orderType","closeDialog","Home","props","history","push","pathname","componentDidMount","getWeb3Provider","connectToBlockchain","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render","bind","map","order","key","orderId","toString","orderStatus","event","target","name","Confirmed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\nimport Dialog from \"./Dialog\"\nimport './App.css'\nimport logo from '../images/logo.png'\nimport receiverImg from '../images/receiver.jpg'\n \nclass Receiver extends Component {\n  state = {\n    account: '',\n    orders: [],\n    currentCourier: '',\n    statusMap: {\n      101: 'Waiting to be taken',\n      102: 'Waiting for delivery',\n      103: 'Delivered, waiting a confirmation',\n      104: 'Completed',\n      105: 'Cancelled',\n    },\n    loading2: false,\n    dialog: false,\n    message: []\n  }\n \n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n \n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n \n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      this.setState({ totalNumber })\n      console.log('totalNumber', totalNumber)\n      for (var i = 1; i <= totalNumber; i++) {\n        const order1 = await deployedExpress.methods.orders1(i).call()\n        const order2 = await deployedExpress.methods.orders2(i).call()\n        const order3 = await deployedExpress.methods.orders3(i).call()\n        const orderAll = { ...order1, ...order2, ...order3 }\n        this.setState({\n          orders: [...this.state.orders, orderAll],\n        })\n      }\n      console.log('myOrders', this.state.orders)\n      const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\n      this.setState({\n        currentCourier: currentCourier\n      })\n      console.log('currentCourier', this.state.currentCourier);\n \n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n \n  confirmOrder = async (_orderId) => {\n    this.setState({ loading: true })\n    const gasAmount = await this.state.deployedExpress.methods\n      .confirmOrder(_orderId)\n      .estimateGas({ from: this.state.account })\n    this.state.deployedExpress.methods\n      .confirmOrder(_orderId)\n      .send({ from: this.state.account, gas: gasAmount })\n      .once('receipt', receipt => {\n        this.setState({ loading: false })\n      })\n  }\n \n  makeGrade = async (_orderId, _grade) => {\n    this.setState({ loading: true })\n    const gasAmount = await this.state.deployedExpress.methods\n      .makeGrade(_orderId, _grade)\n      .estimateGas({ from: this.state.account })\n    this.state.deployedExpress.methods\n      .makeGrade(_orderId, _grade)\n      .send({ from: this.state.account, gas: gasAmount })\n      .once('receipt', receipt => {\n        this.setState({ loading: false })\n      })\n  }\n \n \n  //open the dialog\n  showInfo = async (senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) => {\n    this.setState({\n      loading2: true\n    })\n \n    this.setState({\n      dialog: true,\n      message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n      loading2: false\n    })\n \n  }\n \n  //close the dialog\n  closeDialog = () => {\n    this.setState({\n      dialog: false\n    })\n  }\n  Home = () => {\n    this.props.history.push({ pathname: '/' })\n  }\n  render() {\n    return (\n      <div>\n        <Addressbar account={this.state.account} />{' '}\n        {this.state.dialog&&<Dialog message={this.state.message} closeDialog={this.closeDialog}/>}\n        <div className=\"container-fluid mt-5\">\n        <div className=\"mybody\">\n        <div className=\"title\">\n          <img\n            onClick={this.Home.bind(this)}\n            src={logo}\n            className=\"logoimg2\"\n          ></img>\n          <img\n            src={receiverImg}\n            className=\"logoimg5\"\n          ></img>\n          <h2 className=\"orderH\"> All Orders To Be Confirmed </h2>\n          </div>\n          <div className=\"table1\">\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>{' '}\n                <th scope=\"col\"> ParcelSender Name </th>{' '}\n                <th scope=\"col\"> ParcelSender Address </th>{' '}\n                <th scope=\"col\"> Item Type </th>{' '}\n                <th scope=\"col\"> Confirm Order</th>{' '}\n                <th scope=\"col\"> Grade Courier</th>{' '}\n              </tr>{' '}\n            </thead>{' '}\n            <tbody id=\"orderList\">\n              {' '}\n              {this.state.orders.map((order, key) => {\n                return order.receiver == this.state.account? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\n                    <th scope=\"row\"> {order.senderName} </th>{' '}\n                    <th scope=\"row\"> {order.pickupAddr} </th>{' '}\n                    <th scope=\"row\"> {order.orderType} </th>{' '}\n                    <td>\n                        {' '}\n                        {order.orderStatus == '103' ? (\n                          <button\n                            name={order.orderId}\n                            className=\"confirmButton\"\n                            onClick={async event => {\n                              await this.confirmOrder(event.target.name)\n                            }}\n                          >\n                          Confirm Order{' '}\n                          </button>\n                        ) : Confirmed}{' '}\n                      </td>{' '}\n                      <td>\n                        {' '}\n                        {order.orderStatus == '104' ? (\n                          <button\n                            name={order.orderId}\n                            className=\"makeButton\"\n                            onClick={async event => {\n                              await this.makeGrade(event.target.name)\n                            }}\n                          >\n                          Grade{' '}\n                          </button>\n                        ) : null}{' '}\n                      </td>{' '}\n                  </tr>\n                ) : null\n              })}{' '}\n            </tbody>{' '}\n          </table>{' '}\n          </div>\n          <h2 className=\"orderRecordsH\"> Your Confirmed Orders </h2>{' '}\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>{' '}\n                <th scope=\"col\"> Order Status </th>{' '}\n              </tr>{' '}\n            </thead>{' '}\n            <tbody id=\"orderList\">\n              {' '}\n              {this.state.orders.map((order, key) => {\n                return order.orderStatus == '104' && order.receiver == this.state.account ? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\n                    <th scope=\"row\">\n                      {' '}\n                      {this.state.statusMap[order.orderStatus]}{' '}\n                    </th>{' '}\n                    <td>\n                      {' '}\n                        <button\n                        className=\"showInfoButton\"\n                          onClick={async event => {\n                            \n                            await this.showInfo(order.senderName,order.senderPhone,order.pickupAddr,order.receiverName,order.receiverPhone,order.shippingAddr,order.receiver,order.startTime,order.endTime,order.orderWeight,order.orderType)\n                          }}\n                        >\n                          showInfo{' '}\n                        </button>\n                      {' '}\n                    </td>{' '}\n                  </tr>\n                ) : null\n              })}{' '}\n            </tbody>{' '}\n          </table>{' '}\n          </div>\n        </div>{' '}\n      </div>\n    )\n  }\n \n}\n \nexport default Receiver\n \n\n"]},"metadata":{},"sourceType":"module"}