{"ast":null,"code":"import _objectSpread from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\571G\\\\ExpressDappReact\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\nimport Dialog from \"./Dialog\";\n\nclass Courier extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: '',\n      statusMap: {\n        101: 'Waiting to be taken',\n        102: 'Waiting for delivery',\n        103: 'Delivered, waiting a confirmation',\n        104: 'Completed',\n        105: 'Cancelled'\n      },\n      loading2: false,\n      dialog: false,\n      message: []\n    };\n\n    this.takeOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.deliverOrder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.deliverOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.handleTakeOrder = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              r = window.confirm('Are you sure to taking order ' + e.target.name + '?');\n\n              if (!(r == true)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return _this.takeOrder(e.target.name, 1);\n\n            case 4:\n              _context3.next = 6;\n              break;\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.showInfo = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                loading2: true\n              });\n\n              _this.setState({\n                dialog: true,\n                message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n                loading2: false\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n\n      return function (_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.closeDialog = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context5.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context6.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context6.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context6.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            web3 = window.web3;\n            _context7.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context7.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context7.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context7.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context7.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context7.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context7.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context7.next = 33;\n              break;\n            }\n\n            _context7.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context7.sent;\n            _context7.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context7.sent;\n            _context7.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context7.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context7.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context7.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context7.sent;\n\n            _this3.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this3.state.currentCourier);\n            _context7.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), ' ', this.state.dialog && React.createElement(Dialog, {\n      message: this.state.message,\n      closeDialog: this.closeDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" All Orders To Be Taken \"), ' ', React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" Pickup Address \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Shipping Address \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" Order Type \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" Pickup Time \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Expected Delivery Time \"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.orderStatus == '101' && order.parcelSender != this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \" \", order.shippingAddr, \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" \", order.startTime.toString(), \": 00 \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" \", order.endTime.toString(), \": 00 \"), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: this.handleTakeOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Take Order\", ' '), ' '), ' ') : null;\n    }), ' '), ' '), ' ', React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" Your Taken Orders \"), ' ', React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" #OrderId \"), ' ', React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" Order Status \"), ' '), ' '), ' ', React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, ' ', this.state.orders.map((order, key) => {\n      return order.courier == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), ' ', React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, ' ', this.state.statusMap[order.orderStatus], ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, ' ', order.orderStatus == '102' ? React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return _this4.deliverOrder(event.target.name, 11);\n\n                case 2:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }));\n\n          return function (_x17) {\n            return _ref5.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Deliver Order\", ' ') : null, ' '), ' ', React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, ' ', React.createElement(\"button\", {\n        onClick: /*#__PURE__*/function () {\n          var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n            return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return _this4.showInfo(order.senderName, order.senderPhone, order.pickupAddr, order.receiverName, order.receiverPhone, order.shippingAddr, order.receiver, order.startTime, order.endTime, order.orderWeight, order.orderType);\n\n                case 2:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }));\n\n          return function (_x18) {\n            return _ref6.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"showInfo\", ' '), ' '), ' ') : null;\n    }), ' '), ' '), ' '), ' ');\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["C:/571G/ExpressDappReact/src/components/Courier.js"],"names":["React","Component","Addressbar","Express","Web3","Dialog","Courier","state","account","orders","currentCourier","statusMap","loading2","dialog","message","takeOrder","_orderId","_currentTime","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","deliverOrder","handleTakeOrder","e","r","window","confirm","target","name","showInfo","senderName","senderPhone","pickupAddr","receiverName","receiverPhone","shippingAddr","receiver","startTime","endTime","orderWeight","orderType","closeDialog","componentDidMount","getWeb3Provider","connectToBlockchain","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render","map","order","key","orderStatus","parcelSender","orderId","toString","courier","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\nimport Dialog from \"./Dialog\"\n \nclass Courier extends Component {\n  state = {\n    account: '',\n    orders: [],\n    currentCourier: '',\n    statusMap: {\n      101: 'Waiting to be taken',\n      102: 'Waiting for delivery',\n      103: 'Delivered, waiting a confirmation',\n      104: 'Completed',\n      105: 'Cancelled',\n    },\n    loading2: false,\n    dialog: false,\n    message: []\n  }\n \n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n \n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      this.setState({ totalNumber })\n      console.log('totalNumber', totalNumber)\n      for (var i = 1; i <= totalNumber; i++) {\n        const order1 = await deployedExpress.methods.orders1(i).call()\n        const order2 = await deployedExpress.methods.orders2(i).call()\n        const order3 = await deployedExpress.methods.orders3(i).call()\n        const orderAll = { ...order1, ...order2, ...order3 }\n        this.setState({\n          orders: [...this.state.orders, orderAll],\n        })\n      }\n      console.log('myOrders', this.state.orders)\n      const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\n      this.setState({\n        currentCourier: currentCourier\n      })\n      console.log('currentCourier', this.state.currentCourier);\n \n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n  takeOrder = async (_orderId, _currentTime) => {\n    this.setState({ loading: true })\n    const gasAmount = await this.state.deployedExpress.methods\n      .takeOrder(_orderId, _currentTime)\n      .estimateGas({ from: this.state.account })\n    this.state.deployedExpress.methods\n      .takeOrder(_orderId, _currentTime)\n      .send({ from: this.state.account, gas: gasAmount })\n      .once('receipt', receipt => {\n        this.setState({ loading: false })\n      })\n  }\n  deliverOrder = async (_orderId, _currentTime) => {\n    this.setState({ loading: true })\n    const gasAmount = await this.state.deployedExpress.methods\n      .deliverOrder(_orderId, _currentTime)\n      .estimateGas({ from: this.state.account })\n    this.state.deployedExpress.methods\n      .deliverOrder(_orderId, _currentTime)\n      .send({ from: this.state.account, gas: gasAmount })\n      .once('receipt', receipt => {\n        this.setState({ loading: false })\n      })\n  }\n \n  handleTakeOrder = async e => {\n    var r = window.confirm(\n      'Are you sure to taking order ' + e.target.name + '?',\n    )\n    if (r == true) {\n      // var myDate = new Date();\n      // const currentTime = myDate.getHours()+1;\n      // console.log(currentTime)\n      await this.takeOrder(e.target.name, 1)\n    } else {\n    }\n  }\n \n  //open the dialog\n  showInfo = async (senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType) => {\n    this.setState({\n      loading2: true\n    })\n \n    this.setState({\n      dialog: true,\n      message: [senderName, senderPhone, pickupAddr, receiverName, receiverPhone, shippingAddr, receiver, startTime, endTime, orderWeight, orderType],\n      loading2: false\n    })\n \n  }\n \n  //close the dialog\n  closeDialog = () => {\n    this.setState({\n      dialog: false\n    })\n  }\n \n  render() {\n    return (\n      <div>\n        <Addressbar account={this.state.account} />{' '}\n        {this.state.dialog&&<Dialog message={this.state.message} closeDialog={this.closeDialog}/>}\n        <div className=\"container-fluid mt-5\">\n          <h2> All Orders To Be Taken </h2>{' '}\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>{' '}\n                <th scope=\"col\"> Pickup Address </th>{' '}\n                <th scope=\"col\"> Shipping Address </th>{' '}\n                <th scope=\"col\"> Order Type </th>{' '}\n                <th scope=\"col\"> Pickup Time </th>{' '}\n                <th scope=\"col\"> Expected Delivery Time </th>{' '}\n              </tr>{' '}\n            </thead>{' '}\n            <tbody id=\"orderList\">\n              {' '}\n              {this.state.orders.map((order, key) => {\n                return order.orderStatus == '101' &&\n                  order.parcelSender != this.state.account ? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\n                    <th scope=\"row\"> {order.pickupAddr} </th>{' '}\n                    <th scope=\"row\"> {order.shippingAddr} </th>{' '}\n                    <th scope=\"row\"> {order.orderType} </th>{' '}\n                    <th scope=\"row\"> {order.startTime.toString()}: 00 </th>{' '}\n                    <th scope=\"row\"> {order.endTime.toString()}: 00 </th>{' '}\n                    <td>\n                      <button\n                        name={order.orderId}\n                        onClick={this.handleTakeOrder}\n                      >\n                        Take Order{' '}\n                      </button>{' '}\n                    </td>{' '}\n                  </tr>\n                ) : null\n              })}{' '}\n            </tbody>{' '}\n          </table>{' '}\n          <h2> Your Taken Orders </h2>{' '}\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>{' '}\n                <th scope=\"col\"> Order Status </th>{' '}\n              </tr>{' '}\n            </thead>{' '}\n            <tbody id=\"orderList\">\n              {' '}\n              {this.state.orders.map((order, key) => {\n                return order.courier == this.state.account ? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>{' '}\n                    <th scope=\"row\">\n                      {' '}\n                      {this.state.statusMap[order.orderStatus]}{' '}\n                    </th>{' '}\n                    <td>\n                      {' '}\n                      {order.orderStatus == '102' ? (\n                        <button\n                          name={order.orderId}\n                          onClick={async event => {\n                            await this.deliverOrder(event.target.name, 11)\n                          }}\n                        >\n                          Deliver Order{' '}\n                        </button>\n                      ) : null}{' '}\n                    </td>{' '}\n                    <td>\n                      {' '}\n                      \n                        <button\n                          onClick={async event => {\n                            await this.showInfo(order.senderName,order.senderPhone,order.pickupAddr,order.receiverName,order.receiverPhone,order.shippingAddr,order.receiver,order.startTime,order.endTime,order.orderWeight,order.orderType)\n                          }}\n                        >\n                          showInfo{' '}\n                        </button>\n                      {' '}\n                    </td>{' '}\n                  </tr>\n                ) : null\n              })}{' '}\n            </tbody>{' '}\n          </table>{' '}\n        </div>{' '}\n      </div>\n    )\n  }\n}\n \nexport default Courier\n \n"]},"metadata":{},"sourceType":"module"}