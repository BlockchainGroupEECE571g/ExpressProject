{"ast":null,"code":"/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n\n/** @file WebsocketProvider.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar _ = require('underscore');\n\nvar errors = require('web3-core-helpers').errors;\n\nvar Ws = require('@web3-js/websocket').w3cwebsocket;\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar _btoa = null;\nvar parseURL = null;\n\nif (isNode) {\n  _btoa = function _btoa(str) {\n    return Buffer.from(str).toString('base64');\n  };\n\n  var url = require('url');\n\n  if (url.URL) {\n    // Use the new Node 6+ API for parsing URLs that supports username/password\n    var newURL = url.URL;\n\n    parseURL = function parseURL(url) {\n      return new newURL(url);\n    };\n  } else {\n    // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n    parseURL = require('url').parse;\n  }\n} else {\n  _btoa = btoa;\n\n  parseURL = function parseURL(url) {\n    return new URL(url);\n  };\n} // Default connection ws://localhost:8546\n\n\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n  if (!Ws) {\n    throw new Error('websocket is not available');\n  }\n\n  var _this = this;\n\n  this.responseCallbacks = {};\n  this.notificationCallbacks = [];\n  options = options || {};\n  this._customTimeout = options.timeout; // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n\n  var parsedURL = parseURL(url);\n  var headers = options.headers || {};\n  var protocol = options.protocol || undefined;\n\n  if (parsedURL.username && parsedURL.password) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\n  } // Allow a custom client configuration\n\n\n  var clientConfig = options.clientConfig || undefined; // Allow a custom request options\n  // https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions\n\n  var requestOptions = options.requestOptions || undefined; // When all node core implementations that do not have the\n  // WHATWG compatible URL parser go out of service this line can be removed.\n\n  if (parsedURL.auth) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.auth);\n  }\n\n  this.connection = new Ws(url, protocol, undefined, headers, requestOptions, clientConfig);\n  this.addDefaultEvents(); // LISTEN FOR CONNECTION RESPONSES\n\n  this.connection.onmessage = function (e) {\n    /*jshint maxcomplexity: 6 */\n    var data = typeof e.data === 'string' ? e.data : '';\n\n    _this._parseResponse(data).forEach(function (result) {\n      var id = null; // get the id which matches the returned id\n\n      if (_.isArray(result)) {\n        result.forEach(function (load) {\n          if (_this.responseCallbacks[load.id]) id = load.id;\n        });\n      } else {\n        id = result.id;\n      } // notification\n\n\n      if (!id && result && result.method && result.method.indexOf('_subscription') !== -1) {\n        _this.notificationCallbacks.forEach(function (callback) {\n          if (_.isFunction(callback)) callback(result);\n        }); // fire the callback\n\n      } else if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](null, result);\n\n        delete _this.responseCallbacks[id];\n      }\n    });\n  }; // make property `connected` which will return the current connection status\n\n\n  Object.defineProperty(this, 'connected', {\n    get: function get() {\n      return this.connection && this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: true\n  });\n};\n/**\r\n Will add the error and end event to timeout existing calls\r\n\r\n @method addDefaultEvents\r\n */\n\n\nWebsocketProvider.prototype.addDefaultEvents = function () {\n  var _this = this;\n\n  this.connection.onerror = function () {\n    _this._timeout();\n  };\n\n  this.connection.onclose = function () {\n    _this._timeout(); // reset all requests and callbacks\n\n\n    _this.reset();\n  }; // this.connection.on('timeout', function(){\n  //     _this._timeout();\n  // });\n\n};\n/**\r\n Will parse the response and make an array out of it.\r\n\r\n @method _parseResponse\r\n @param {String} data\r\n */\n\n\nWebsocketProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n      returnValues = []; // DE-CHUNKER\n\n\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data; // start timeout to cancel all requests\n\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        _this._timeout();\n\n        throw errors.InvalidResponse(data);\n      }, 1000 * 15);\n      return;\n    } // cancel timeout and set chunk to null\n\n\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n/**\r\n Adds a callback to the responseCallbacks object,\r\n which will be called if a response matching the response Id will arrive.\r\n\r\n @method _addResponseCallback\r\n */\n\n\nWebsocketProvider.prototype._addResponseCallback = function (payload, callback) {\n  var id = payload.id || payload[0].id;\n  var method = payload.method || payload[0].method;\n  this.responseCallbacks[id] = callback;\n  this.responseCallbacks[id].method = method;\n\n  var _this = this; // schedule triggering the error response if a custom timeout is set\n\n\n  if (this._customTimeout) {\n    setTimeout(function () {\n      if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\n\n        delete _this.responseCallbacks[id];\n      }\n    }, this._customTimeout);\n  }\n};\n/**\r\n Timeout all requests when the end/error event is fired\r\n\r\n @method _timeout\r\n */\n\n\nWebsocketProvider.prototype._timeout = function () {\n  for (var key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on WS'));\n      delete this.responseCallbacks[key];\n    }\n  }\n};\n\nWebsocketProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  if (this.connection.readyState === this.connection.CONNECTING) {\n    setTimeout(function () {\n      _this.send(payload, callback);\n    }, 10);\n    return;\n  } // try reconnect, when connection is gone\n  // if(!this.connection.writable)\n  //     this.connection.connect({url: this.url});\n\n\n  if (this.connection.readyState !== this.connection.OPEN) {\n    console.error('connection not open on send()');\n\n    if (typeof this.connection.onerror === 'function') {\n      this.connection.onerror(new Error('connection not open'));\n    } else {\n      console.error('no error callback');\n    }\n\n    callback(new Error('connection not open'));\n    return;\n  }\n\n  this.connection.send(JSON.stringify(payload));\n\n  this._addResponseCallback(payload, callback);\n};\n/**\r\n Subscribes to provider events.provider\r\n\r\n @method on\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\n\n\nWebsocketProvider.prototype.on = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback);\n      break;\n\n    case 'connect':\n      this.connection.onopen = callback;\n      break;\n\n    case 'end':\n      this.connection.onclose = callback;\n      break;\n\n    case 'error':\n      this.connection.onerror = callback;\n      break;\n    // default:\n    //     this.connection.on(type, callback);\n    //     break;\n  }\n}; // TODO add once\n\n/**\r\n Removes event listener\r\n\r\n @method removeListener\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\n\n\nWebsocketProvider.prototype.removeListener = function (type, callback) {\n  var _this = this;\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function (cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1);\n      });\n      break;\n    // TODO remvoving connect missing\n    // default:\n    //     this.connection.removeListener(type, callback);\n    //     break;\n  }\n};\n/**\r\n Removes all event listeners\r\n\r\n @method removeAllListeners\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n */\n\n\nWebsocketProvider.prototype.removeAllListeners = function (type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = [];\n      break;\n    // TODO remvoving connect properly missing\n\n    case 'connect':\n      this.connection.onopen = null;\n      break;\n\n    case 'end':\n      this.connection.onclose = null;\n      break;\n\n    case 'error':\n      this.connection.onerror = null;\n      break;\n\n    default:\n      // this.connection.removeAllListeners(type);\n      break;\n  }\n};\n/**\r\n Resets the providers, clears all callbacks\r\n\r\n @method reset\r\n */\n\n\nWebsocketProvider.prototype.reset = function () {\n  this._timeout();\n\n  this.notificationCallbacks = []; // this.connection.removeAllListeners('error');\n  // this.connection.removeAllListeners('end');\n  // this.connection.removeAllListeners('timeout');\n\n  this.addDefaultEvents();\n};\n\nWebsocketProvider.prototype.disconnect = function () {\n  if (this.connection) {\n    this.connection.close();\n  }\n};\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\n\n\nWebsocketProvider.prototype.supportsSubscriptions = function () {\n  return true;\n};\n\nmodule.exports = WebsocketProvider;","map":{"version":3,"sources":["F:/documents/Desktop/ubccourse/EECE571g/express330/ExpressProject/node_modules/web3-providers-ws/src/index.js"],"names":["_","require","errors","Ws","w3cwebsocket","isNode","Object","prototype","toString","call","process","_btoa","parseURL","str","Buffer","from","url","URL","newURL","parse","btoa","WebsocketProvider","options","Error","_this","responseCallbacks","notificationCallbacks","_customTimeout","timeout","parsedURL","headers","protocol","undefined","username","password","authorization","clientConfig","requestOptions","auth","connection","addDefaultEvents","onmessage","e","data","_parseResponse","forEach","result","id","isArray","load","method","indexOf","callback","isFunction","defineProperty","get","readyState","OPEN","enumerable","onerror","_timeout","onclose","reset","returnValues","dechunkedData","replace","split","lastChunk","JSON","clearTimeout","lastChunkTimeout","setTimeout","InvalidResponse","push","_addResponseCallback","payload","ConnectionTimeout","key","hasOwnProperty","InvalidConnection","send","CONNECTING","console","error","stringify","on","type","onopen","removeListener","cb","index","splice","removeAllListeners","disconnect","close","supportsSubscriptions","module","exports"],"mappings":"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","sourcesContent":["/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n/** @file WebsocketProvider.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar _ = require('underscore');\r\nvar errors = require('web3-core-helpers').errors;\r\nvar Ws = require('@web3-js/websocket').w3cwebsocket;\r\n\r\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\r\n\r\nvar _btoa = null;\r\nvar parseURL = null;\r\nif (isNode) {\r\n    _btoa = function(str) {\r\n        return Buffer.from(str).toString('base64');\r\n    };\r\n    var url = require('url');\r\n    if (url.URL) {\r\n        // Use the new Node 6+ API for parsing URLs that supports username/password\r\n        var newURL = url.URL;\r\n        parseURL = function(url) {\r\n            return new newURL(url);\r\n        };\r\n    }\r\n    else {\r\n        // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\r\n        parseURL = require('url').parse;\r\n    }\r\n} else {\r\n    _btoa = btoa;\r\n    parseURL = function(url) {\r\n        return new URL(url);\r\n    };\r\n}\r\n// Default connection ws://localhost:8546\r\n\r\n\r\n\r\n\r\nvar WebsocketProvider = function WebsocketProvider(url, options)  {\r\n    if (!Ws) {\r\n        throw new Error('websocket is not available');\r\n    }\r\n\r\n    var _this = this;\r\n    this.responseCallbacks = {};\r\n    this.notificationCallbacks = [];\r\n\r\n    options = options || {};\r\n    this._customTimeout = options.timeout;\r\n\r\n    // The w3cwebsocket implementation does not support Basic Auth\r\n    // username/password in the URL. So generate the basic auth header, and\r\n    // pass through with any additional headers supplied in constructor\r\n    var parsedURL = parseURL(url);\r\n    var headers = options.headers || {};\r\n    var protocol = options.protocol || undefined;\r\n    if (parsedURL.username && parsedURL.password) {\r\n        headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\r\n    }\r\n\r\n    // Allow a custom client configuration\r\n    var clientConfig = options.clientConfig || undefined;\r\n\r\n    // Allow a custom request options\r\n    // https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions\r\n    var requestOptions = options.requestOptions || undefined;\r\n\r\n    // When all node core implementations that do not have the\r\n    // WHATWG compatible URL parser go out of service this line can be removed.\r\n    if (parsedURL.auth) {\r\n        headers.authorization = 'Basic ' + _btoa(parsedURL.auth);\r\n    }\r\n    this.connection = new Ws(url, protocol, undefined, headers, requestOptions, clientConfig);\r\n\r\n    this.addDefaultEvents();\r\n\r\n\r\n    // LISTEN FOR CONNECTION RESPONSES\r\n    this.connection.onmessage = function(e) {\r\n        /*jshint maxcomplexity: 6 */\r\n        var data = (typeof e.data === 'string') ? e.data : '';\r\n\r\n        _this._parseResponse(data).forEach(function(result){\r\n\r\n            var id = null;\r\n\r\n            // get the id which matches the returned id\r\n            if(_.isArray(result)) {\r\n                result.forEach(function(load){\r\n                    if(_this.responseCallbacks[load.id])\r\n                        id = load.id;\r\n                });\r\n            } else {\r\n                id = result.id;\r\n            }\r\n\r\n            // notification\r\n            if(!id && result && result.method && result.method.indexOf('_subscription') !== -1) {\r\n                _this.notificationCallbacks.forEach(function(callback){\r\n                    if(_.isFunction(callback))\r\n                        callback(result);\r\n                });\r\n\r\n                // fire the callback\r\n            } else if(_this.responseCallbacks[id]) {\r\n                _this.responseCallbacks[id](null, result);\r\n                delete _this.responseCallbacks[id];\r\n            }\r\n        });\r\n    };\r\n\r\n    // make property `connected` which will return the current connection status\r\n    Object.defineProperty(this, 'connected', {\r\n      get: function () {\r\n        return this.connection && this.connection.readyState === this.connection.OPEN;\r\n      },\r\n      enumerable: true,\r\n  });\r\n};\r\n\r\n/**\r\n Will add the error and end event to timeout existing calls\r\n\r\n @method addDefaultEvents\r\n */\r\nWebsocketProvider.prototype.addDefaultEvents = function(){\r\n    var _this = this;\r\n\r\n    this.connection.onerror = function(){\r\n        _this._timeout();\r\n    };\r\n\r\n    this.connection.onclose = function(){\r\n        _this._timeout();\r\n\r\n        // reset all requests and callbacks\r\n        _this.reset();\r\n    };\r\n\r\n    // this.connection.on('timeout', function(){\r\n    //     _this._timeout();\r\n    // });\r\n};\r\n\r\n/**\r\n Will parse the response and make an array out of it.\r\n\r\n @method _parseResponse\r\n @param {String} data\r\n */\r\nWebsocketProvider.prototype._parseResponse = function(data) {\r\n    var _this = this,\r\n        returnValues = [];\r\n\r\n    // DE-CHUNKER\r\n    var dechunkedData = data\r\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\r\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\r\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\r\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\r\n        .split('|--|');\r\n\r\n    dechunkedData.forEach(function(data){\r\n\r\n        // prepend the last chunk\r\n        if(_this.lastChunk)\r\n            data = _this.lastChunk + data;\r\n\r\n        var result = null;\r\n\r\n        try {\r\n            result = JSON.parse(data);\r\n\r\n        } catch(e) {\r\n\r\n            _this.lastChunk = data;\r\n\r\n            // start timeout to cancel all requests\r\n            clearTimeout(_this.lastChunkTimeout);\r\n            _this.lastChunkTimeout = setTimeout(function(){\r\n                _this._timeout();\r\n                throw errors.InvalidResponse(data);\r\n            }, 1000 * 15);\r\n\r\n            return;\r\n        }\r\n\r\n        // cancel timeout and set chunk to null\r\n        clearTimeout(_this.lastChunkTimeout);\r\n        _this.lastChunk = null;\r\n\r\n        if(result)\r\n            returnValues.push(result);\r\n    });\r\n\r\n    return returnValues;\r\n};\r\n\r\n\r\n/**\r\n Adds a callback to the responseCallbacks object,\r\n which will be called if a response matching the response Id will arrive.\r\n\r\n @method _addResponseCallback\r\n */\r\nWebsocketProvider.prototype._addResponseCallback = function(payload, callback) {\r\n    var id = payload.id || payload[0].id;\r\n    var method = payload.method || payload[0].method;\r\n\r\n    this.responseCallbacks[id] = callback;\r\n    this.responseCallbacks[id].method = method;\r\n\r\n    var _this = this;\r\n\r\n    // schedule triggering the error response if a custom timeout is set\r\n    if (this._customTimeout) {\r\n        setTimeout(function () {\r\n            if (_this.responseCallbacks[id]) {\r\n                _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\r\n                delete _this.responseCallbacks[id];\r\n            }\r\n        }, this._customTimeout);\r\n    }\r\n};\r\n\r\n/**\r\n Timeout all requests when the end/error event is fired\r\n\r\n @method _timeout\r\n */\r\nWebsocketProvider.prototype._timeout = function() {\r\n    for(var key in this.responseCallbacks) {\r\n        if(this.responseCallbacks.hasOwnProperty(key)){\r\n            this.responseCallbacks[key](errors.InvalidConnection('on WS'));\r\n            delete this.responseCallbacks[key];\r\n        }\r\n    }\r\n};\r\n\r\n\r\nWebsocketProvider.prototype.send = function (payload, callback) {\r\n    var _this = this;\r\n\r\n    if (this.connection.readyState === this.connection.CONNECTING) {\r\n        setTimeout(function () {\r\n            _this.send(payload, callback);\r\n        }, 10);\r\n        return;\r\n    }\r\n\r\n    // try reconnect, when connection is gone\r\n    // if(!this.connection.writable)\r\n    //     this.connection.connect({url: this.url});\r\n    if (this.connection.readyState !== this.connection.OPEN) {\r\n        console.error('connection not open on send()');\r\n        if (typeof this.connection.onerror === 'function') {\r\n            this.connection.onerror(new Error('connection not open'));\r\n        } else {\r\n            console.error('no error callback');\r\n        }\r\n        callback(new Error('connection not open'));\r\n        return;\r\n    }\r\n\r\n    this.connection.send(JSON.stringify(payload));\r\n    this._addResponseCallback(payload, callback);\r\n};\r\n\r\n/**\r\n Subscribes to provider events.provider\r\n\r\n @method on\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\r\nWebsocketProvider.prototype.on = function (type, callback) {\r\n\r\n    if(typeof callback !== 'function')\r\n        throw new Error('The second parameter callback must be a function.');\r\n\r\n    switch(type){\r\n        case 'data':\r\n            this.notificationCallbacks.push(callback);\r\n            break;\r\n\r\n        case 'connect':\r\n            this.connection.onopen = callback;\r\n            break;\r\n\r\n        case 'end':\r\n            this.connection.onclose = callback;\r\n            break;\r\n\r\n        case 'error':\r\n            this.connection.onerror = callback;\r\n            break;\r\n\r\n        // default:\r\n        //     this.connection.on(type, callback);\r\n        //     break;\r\n    }\r\n};\r\n\r\n// TODO add once\r\n\r\n/**\r\n Removes event listener\r\n\r\n @method removeListener\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\r\nWebsocketProvider.prototype.removeListener = function (type, callback) {\r\n    var _this = this;\r\n\r\n    switch(type){\r\n        case 'data':\r\n            this.notificationCallbacks.forEach(function(cb, index){\r\n                if(cb === callback)\r\n                    _this.notificationCallbacks.splice(index, 1);\r\n            });\r\n            break;\r\n\r\n        // TODO remvoving connect missing\r\n\r\n        // default:\r\n        //     this.connection.removeListener(type, callback);\r\n        //     break;\r\n    }\r\n};\r\n\r\n/**\r\n Removes all event listeners\r\n\r\n @method removeAllListeners\r\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\r\n */\r\nWebsocketProvider.prototype.removeAllListeners = function (type) {\r\n    switch(type){\r\n        case 'data':\r\n            this.notificationCallbacks = [];\r\n            break;\r\n\r\n        // TODO remvoving connect properly missing\r\n\r\n        case 'connect':\r\n            this.connection.onopen = null;\r\n            break;\r\n\r\n        case 'end':\r\n            this.connection.onclose = null;\r\n            break;\r\n\r\n        case 'error':\r\n            this.connection.onerror = null;\r\n            break;\r\n\r\n        default:\r\n            // this.connection.removeAllListeners(type);\r\n            break;\r\n    }\r\n};\r\n\r\n/**\r\n Resets the providers, clears all callbacks\r\n\r\n @method reset\r\n */\r\nWebsocketProvider.prototype.reset = function () {\r\n    this._timeout();\r\n    this.notificationCallbacks = [];\r\n\r\n    // this.connection.removeAllListeners('error');\r\n    // this.connection.removeAllListeners('end');\r\n    // this.connection.removeAllListeners('timeout');\r\n\r\n    this.addDefaultEvents();\r\n};\r\n\r\nWebsocketProvider.prototype.disconnect = function () {\r\n    if (this.connection) {\r\n        this.connection.close();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\r\nWebsocketProvider.prototype.supportsSubscriptions = function () {\r\n    return true;\r\n};\r\n\r\nmodule.exports = WebsocketProvider;\r\n"]},"metadata":{},"sourceType":"script"}