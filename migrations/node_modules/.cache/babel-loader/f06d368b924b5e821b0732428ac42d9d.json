{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport './App.css';\nimport Express from '../abis/Express';\nimport Addressbar from './Addressbar';\nimport { withRouter } from 'react-router';\nimport Courier from './Courier';\n\nclass App extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      totalNumber: 0,\n      orders: [],\n      loading: false,\n      CourierBtn: true\n    };\n\n    this.createOrder1 = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_senderName, _senderPhone, _pickupAddr, _shippingAddr, _receiverName, _receiverPhone) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.createOrder1(_senderName, _senderPhone, _pickupAddr, _shippingAddr, _receiverName, _receiverPhone).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.createOrder1(_senderName, _senderPhone, _pickupAddr, _shippingAddr, _receiverName, _receiverPhone).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3, _x4, _x5, _x6) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.createOrder2 = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_startTime, _endTime, _orderWeight, _orderType, _receiver, _orderPrice) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _this.state.deployedExpress.methods.createOrder2(_startTime, _endTime, _orderWeight, _orderType, _receiver).estimateGas({\n                from: _this.state.account,\n                value: _orderPrice\n              });\n\n            case 3:\n              gasAmount = _context2.sent;\n\n              _this.state.deployedExpress.methods.createOrder2(_startTime, _endTime, _orderWeight, _orderType, _receiver).send({\n                from: _this.state.account,\n                value: _orderPrice,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.takeOrder = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context3.next = 3;\n              return _this.state.deployedExpress.methods.takeOrder(_orderId).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context3.sent;\n\n              _this.state.deployedExpress.methods.takeOrder(_orderId).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x13, _x14) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.ParcelSender = () => {\n      var account = this.state.account;\n      this.props.history.push({\n        pathname: '/ParcelSender',\n        query: {\n          account\n        }\n      });\n    };\n\n    this.Courier = () => {\n      var account = this.state.account;\n      this.props.history.push({\n        pathname: '/Courier',\n        query: {\n          account\n        }\n      });\n    };\n\n    this.Receiver = () => {\n      var account = this.state.account;\n      this.props.history.push({\n        pathname: '/Receiver',\n        query: {\n          account\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context4.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context5.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context5.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context5.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            web3 = window.web3;\n            _context6.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context6.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context6.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context6.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context6.next = 35;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context6.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context6.sent;\n            console.log(totalNumber);\n\n            _this3.setState({\n              totalNumber\n            });\n\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context6.next = 33;\n              break;\n            }\n\n            _context6.next = 21;\n            return deployedExpress.methods.order1(i).call();\n\n          case 21:\n            order1 = _context6.sent;\n            _context6.next = 24;\n            return deployedExpress.methods.order2(i).call();\n\n          case 24:\n            order2 = _context6.sent;\n            _context6.next = 27;\n            return deployedExpress.methods.order3(i).call();\n\n          case 27:\n            order3 = _context6.sent;\n            orderAll = [...order1, ...order2, ...order3];\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context6.next = 18;\n            break;\n\n          case 33:\n            _context6.next = 36;\n            break;\n\n          case 35:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 36:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }))();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.ParcelSender.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"ParcelSender\"), React.createElement(\"button\", {\n      onClick: this.Courier.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Courier\"), React.createElement(\"button\", {\n      onClick: this.Receiver.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Receiver\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/EECE-571G/ExpressDappReact/src/components/App.js"],"names":["React","Component","Web3","logo","Express","Addressbar","withRouter","Courier","App","state","account","totalNumber","orders","loading","CourierBtn","createOrder1","_senderName","_senderPhone","_pickupAddr","_shippingAddr","_receiverName","_receiverPhone","setState","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","createOrder2","_startTime","_endTime","_orderWeight","_orderType","_receiver","_orderPrice","value","takeOrder","_orderId","_currentTime","ParcelSender","props","history","push","pathname","query","Receiver","componentDidMount","getWeb3Provider","connectToBlockchain","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","call","console","log","i","order1","order2","order3","orderAll","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport logo from '../logo.png'\nimport './App.css'\nimport Express from '../abis/Express'\nimport Addressbar from './Addressbar'\nimport { withRouter } from 'react-router'\nimport Courier from './Courier'\n\nclass App extends Component {\n  state = {\n    account: '',\n    totalNumber: 0,\n    orders: [],\n    loading: false,\n    CourierBtn:true,\n\n  }\n\n\n\n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n\n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      console.log(totalNumber)\n      this.setState({ totalNumber })\n      for (var i = 1;i<= totalNumber;i++) {\n        const order1 = await deployedExpress.methods.order1(i).call();\n        const order2 = await deployedExpress.methods.order2(i).call();\n        const order3= await deployedExpress.methods.order3(i).call();\n        const orderAll = [...order1, ...order2, ...order3];\n        this.setState({\n          orders:[...this.state.orders, orderAll]\n        });\n      }\n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n\n  createOrder1 = async (_senderName, _senderPhone, _pickupAddr,_shippingAddr,_receiverName, _receiverPhone) => {\n    this.setState ({loading: true})\n    const gasAmount = await this.state.deployedExpress.methods.createOrder1(_senderName, _senderPhone, _pickupAddr,_shippingAddr,_receiverName, _receiverPhone).estimateGas({from: this.state.account})\n    this.state.deployedExpress.methods.createOrder1(_senderName, _senderPhone, _pickupAddr,_shippingAddr,_receiverName, _receiverPhone).send({from: this.state.account, gas: gasAmount})\n    .once('receipt', (receipt)=> {\n      this.setState({loading: false});\n    })\n  }\n\n  createOrder2 = async (_startTime, _endTime, _orderWeight, _orderType, _receiver, _orderPrice) => {\n    this.setState ({loading: true}) \n    const gasAmount = await this.state.deployedExpress.methods.createOrder2(_startTime, _endTime, _orderWeight, _orderType, _receiver).estimateGas({from: this.state.account, value: _orderPrice})\n    this.state.deployedExpress.methods.createOrder2(_startTime, _endTime, _orderWeight, _orderType, _receiver).send({from: this.state.account, value: _orderPrice, gas: gasAmount})\n    .once('receipt', (receipt)=> {\n      this.setState({loading: false});\n    })\n  }\n\n\n  takeOrder = async (_orderId, _currentTime) => {\n    this.setState ({loading: true})\n    const gasAmount = await this.state.deployedExpress.methods.takeOrder(_orderId).estimateGas({from: this.state.account})\n    this.state.deployedExpress.methods.takeOrder(_orderId).send({from: this.state.account, gas: gasAmount })\n    .once('receipt', (receipt)=> {\n      this.setState({loading: false});\n    })\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n       <Addressbar account={this.state.account} />\n       <div className=\"container-fluid mt-5\">\n\n       <button onClick={this.ParcelSender.bind(this)}>ParcelSender</button>\n        <button onClick={this.Courier.bind(this)}>Courier</button>\n        <button onClick={this.Receiver.bind(this)}>Receiver</button>\n     \n\n                 \n           \n        </div>\n      </div>\n    )\n  }\n  ParcelSender = () => {\n    var account = this.state.account;\n   this.props.history.push({pathname:'/ParcelSender', query:{account}})\n  }  \n\n  Courier = () => {\n    var account = this.state.account;\n   this.props.history.push({pathname:'/Courier', query:{account}})\n\n  }\n\n  Receiver = () => {\n    var account = this.state.account;\n   this.props.history.push({pathname:'/Receiver', query:{account}})\n  }\n\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}