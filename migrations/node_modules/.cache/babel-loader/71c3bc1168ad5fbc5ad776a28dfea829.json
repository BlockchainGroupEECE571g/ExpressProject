{"ast":null,"code":"import _objectSpread from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\571G\\\\ExpressDappReact\\\\src\\\\components\\\\Receiver.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\n\nclass Receiver extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: '',\n      orders: [],\n      currentCourier: ''\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.getWeb3Provider();\n\n          case 2:\n            _context.next = 4;\n            return _this.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context2.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context2.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context2.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll, currentCourier;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            web3 = window.web3;\n            _context3.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context3.sent;\n\n            _this2.setState({\n              account: accounts[0]\n            });\n\n            _context3.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context3.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context3.next = 41;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this2.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context3.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context3.sent;\n\n            _this2.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context3.next = 33;\n              break;\n            }\n\n            _context3.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context3.sent;\n            _context3.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context3.sent;\n            _context3.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context3.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this2.setState({\n              orders: [..._this2.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context3.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this2.state.orders);\n            _context3.next = 36;\n            return deployedExpress.methods.couriers(accounts[0]).call();\n\n          case 36:\n            currentCourier = _context3.sent;\n\n            _this2.setState({\n              currentCourier: currentCourier\n            });\n\n            console.log('currentCourier', _this2.state.currentCourier);\n            _context3.next = 42;\n            break;\n\n          case 41:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Receiver;","map":{"version":3,"sources":["C:/571G/ExpressDappReact/src/components/Receiver.js"],"names":["React","Component","Addressbar","Express","Web3","Receiver","state","account","orders","currentCourier","componentDidMount","getWeb3Provider","connectToBlockchain","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","networks","deployedExpress","Contract","abi","address","methods","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","couriers","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\nclass Receiver extends Component {\n  state = {\n    account: '',\n    orders: [],\n    currentCourier: ''\n  }\n\n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n\n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      this.setState({ totalNumber })\n      console.log('totalNumber', totalNumber)\n      for (var i = 1; i <= totalNumber; i++) {\n        const order1 = await deployedExpress.methods.orders1(i).call()\n        const order2 = await deployedExpress.methods.orders2(i).call()\n        const order3 = await deployedExpress.methods.orders3(i).call()\n        const orderAll = { ...order1, ...order2, ...order3 }\n        this.setState({\n          orders: [...this.state.orders, orderAll],\n        })\n      }\n      console.log('myOrders', this.state.orders)\n      const currentCourier = await deployedExpress.methods.couriers(accounts[0]).call();\n      this.setState({\n        currentCourier: currentCourier\n      })\n      console.log('currentCourier', this.state.currentCourier);\n\n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n  render() {\n    return (\n    \n      <div>\n       <Addressbar account={this.state.account} />\n       <div className=\"container-fluid mt-5\">\n      \n      \n      </div>\n      </div>\n      \n      )}\n}\n\nexport default Receiver\n"]},"metadata":{},"sourceType":"module"}