{"ast":null,"code":"import _objectSpread from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\n\nclass Courier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: '',\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.getWeb3Provider();\n\n          case 2:\n            _context.next = 4;\n            return _this.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context2.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context2.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context2.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            web3 = window.web3;\n            _context3.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context3.sent;\n\n            _this2.setState({\n              account: accounts[0]\n            });\n\n            _context3.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context3.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context3.next = 36;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this2.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context3.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context3.sent;\n\n            _this2.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context3.next = 33;\n              break;\n            }\n\n            _context3.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context3.sent;\n            _context3.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context3.sent;\n            _context3.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context3.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this2.setState({\n              orders: [..._this2.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context3.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this2.state.orders);\n            _context3.next = 37;\n            break;\n\n          case 36:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 37:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n  render() {\n    var _this3 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"All Orders To Be Taken\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" #OrderId \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Pickup Address \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Shipping Address\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Order Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Pickup Time\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Expected Delivery Time\"))), React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.orders.map((order, key) => {\n      return order.orderStatus == '101' ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", order.orderId.PickupAddr, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \", order.orderId.shippingAddr, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", order.orderId.orderType, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", order.orderId.startTime.toString(), \" : 00 \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", order.orderId.endTime.toString(), \" : 00 \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this3.takeOrder(event.target.name);\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Cancel Order\"), \")\")) : null;\n    })))));\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["D:/EECE-571G/ExpressDappReact/src/components/Courier.js"],"names":["React","Component","Addressbar","Courier","state","account","orders","componentDidMount","getWeb3Provider","connectToBlockchain","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","Express","networks","deployedExpress","Contract","abi","address","methods","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","render","map","order","key","orderStatus","orderId","toString","PickupAddr","shippingAddr","orderType","startTime","endTime","event","takeOrder","target","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\n\nclass Courier extends Component {\n  state = {\n    account:'',\n    orders:[],\n  }\n\n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n\n\n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      this.setState({ totalNumber })\n      console.log('totalNumber', totalNumber)\n      for (var i = 1; i <= totalNumber; i++) {\n        const order1 = await deployedExpress.methods.orders1(i).call()\n        const order2 = await deployedExpress.methods.orders2(i).call()\n        const order3 = await deployedExpress.methods.orders3(i).call()\n        const orderAll = { ...order1, ...order2, ...order3 }\n        this.setState({\n          orders: [...this.state.orders, orderAll],\n        })\n      }\n      console.log('myOrders', this.state.orders)\n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n\n\n  render() {\n    return (\n    \n      <div>\n       <Addressbar account={this.state.account} />\n       <div className=\"container-fluid mt-5\">\n       <h2>All Orders To Be Taken</h2>\n            <table className=\"table\">\n              <thead id=\"orderList\">\n                <tr>\n                  <th scope=\"col\"> #OrderId </th>\n                  <th scope=\"col\"> Pickup Address </th>\n                  <th scope=\"col\"> Shipping Address</th>\n                  <th scope=\"col\"> Order Type</th>\n                  <th scope=\"col\"> Pickup Time</th>\n                  <th scope=\"col\"> Expected Delivery Time</th>              \n                </tr>\n              </thead>\n              <tbody id=\"orderList\">\n                {this.state.orders.map((order, key) => {\n                  return order.orderStatus == '101' ?(                \n                    <tr key={key}>\n                      <th scope=\"row\"> {order.orderId.toString()} </th>\n                      <th scope=\"row\"> {order.orderId.PickupAddr} </th>\n                      <th scope=\"row\"> {order.orderId.shippingAddr} </th>\n                      <th scope=\"row\"> {order.orderId.orderType} </th>\n                      <th scope=\"row\"> {order.orderId.startTime.toString()} : 00 </th>\n                      <th scope=\"row\"> {order.orderId.endTime.toString()} : 00 </th>\n                      <td>                 \n                          <button\n                            name={order.orderId}\n                            onClick={async event => {\n                              await this.takeOrder(\n                                event.target.name\n                              )\n                            }}\n                          >\n                            Cancel Order\n                          </button>\n                        )\n                      </td>\n                    </tr>\n                  ):null\n                })}\n              </tbody>\n            </table>\n   \n      \n      \n      </div>\n      </div>\n      \n      )}\n}\n\nexport default Courier;\n"]},"metadata":{},"sourceType":"module"}