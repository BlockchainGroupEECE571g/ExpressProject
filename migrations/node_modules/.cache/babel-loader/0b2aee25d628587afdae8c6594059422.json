{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport './App.css';\nimport Express from '../abis/Express';\nimport Addressbar from './Addressbar';\nimport { withRouter } from 'react-router';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: '',\n      totalNumber: 0,\n      items: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.getWeb3Provider();\n\n          case 2:\n            _context.next = 4;\n            return _this.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context2.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context2.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context2.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            web3 = window.web3;\n            _context3.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context3.sent;\n\n            _this2.setState({\n              account: accounts[0]\n            });\n\n            _context3.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context3.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context3.next = 19;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this2.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context3.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context3.sent;\n            console.log(totalNumber);\n\n            _this2.setState({\n              totalNumber\n            });\n\n            _context3.next = 20;\n            break;\n\n          case 19:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), ' ', React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.ParcelSender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"ParcelSender\"), React.createElement(\"button\", {\n      onClick: () => this.props.history.push('Courier'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Courier\"), React.createElement(\"button\", {\n      onClick: () => this.props.history.push('Receiver'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Receiver\")), ' ');\n  }\n\n  ParcelSender() {\n    console.log(this);\n    this.props.history.push('ParcelSender');\n  }\n\n  Courier() {\n    this.props.history.push('Courier');\n  }\n\n  Receiver() {\n    this.props.history.push('Receiver');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/EECE-571G/ExpressDappReact/src/components/App.js"],"names":["React","Component","Web3","logo","Express","Addressbar","withRouter","App","state","account","totalNumber","items","loading","componentDidMount","getWeb3Provider","connectToBlockchain","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","networks","deployedExpress","Contract","abi","address","methods","call","console","log","render","ParcelSender","props","history","push","Courier","Receiver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport logo from '../logo.png'\nimport './App.css'\nimport Express from '../abis/Express'\nimport Addressbar from './Addressbar'\nimport { withRouter } from 'react-router'\n\nclass App extends Component {\n  state = {\n    account: '',\n    totalNumber: 0,\n    items: [],\n    loading: true,\n\n  }\n\n\n\n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n\n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      console.log(totalNumber)\n      this.setState({ totalNumber })\n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Addressbar account={this.state.account} />{' '}\n        <div className=\"container-fluid mt-5\">\n        <button onClick={this.ParcelSender}>ParcelSender</button>\n        <button onClick={() => this.props.history.push('Courier')}>Courier</button>\n        <button onClick={() => this.props.history.push('Receiver')}>Receiver</button>\n        </div>{' '}\n      </div>\n    )\n  }\n  ParcelSender(){\n    console.log(this);\n    this.props.history.push('ParcelSender');\n}  \nCourier(){\n  \n    this.props.history.push('Courier');\n}\nReceiver(){\n    this.props.history.push('Receiver');\n}\n\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}