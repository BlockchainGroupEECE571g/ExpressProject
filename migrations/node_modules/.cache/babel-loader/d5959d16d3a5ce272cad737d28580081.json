{"ast":null,"code":"import _objectSpread from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\EECE-571G\\\\ExpressDappReact\\\\src\\\\components\\\\Courier.js\";\nimport React, { Component } from 'react';\nimport Addressbar from './Addressbar';\nimport Express from '../abis/Express';\nimport Web3 from 'web3';\n\nclass Courier extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      account: '',\n      orders: []\n    };\n\n    this.takeOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_orderId, _currentTime) {\n        var gasAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).estimateGas({\n                from: _this.state.account\n              });\n\n            case 3:\n              gasAmount = _context.sent;\n\n              _this.state.deployedExpress.methods.takeOrder(_orderId, _currentTime).send({\n                from: _this.state.account,\n                gas: gasAmount\n              }).once('receipt', receipt => {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.handleTakeOrder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              r = window.confirm('Are you sure to taking order ' + e.target.name + '?');\n\n              if (!(r == true)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _this.takeOrder(e.target.name, 11);\n\n            case 4:\n              _context2.next = 6;\n              break;\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _this2.getWeb3Provider();\n\n          case 2:\n            _context3.next = 4;\n            return _this2.connectToBlockchain();\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n  getWeb3Provider() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context4.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context4.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context4.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n\n  connectToBlockchain() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var web3, accounts, networkId, networkData, deployedExpress, totalNumber, i, order1, order2, order3, orderAll;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            web3 = window.web3;\n            _context5.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context5.sent;\n\n            _this3.setState({\n              account: accounts[0]\n            });\n\n            _context5.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context5.sent;\n            networkData = Express.networks[networkId];\n\n            if (!networkData) {\n              _context5.next = 36;\n              break;\n            }\n\n            deployedExpress = new web3.eth.Contract(Express.abi, networkData.address);\n\n            _this3.setState({\n              deployedExpress: deployedExpress\n            });\n\n            _context5.next = 14;\n            return deployedExpress.methods.totalNumber().call();\n\n          case 14:\n            totalNumber = _context5.sent;\n\n            _this3.setState({\n              totalNumber\n            });\n\n            console.log('totalNumber', totalNumber);\n            i = 1;\n\n          case 18:\n            if (!(i <= totalNumber)) {\n              _context5.next = 33;\n              break;\n            }\n\n            _context5.next = 21;\n            return deployedExpress.methods.orders1(i).call();\n\n          case 21:\n            order1 = _context5.sent;\n            _context5.next = 24;\n            return deployedExpress.methods.orders2(i).call();\n\n          case 24:\n            order2 = _context5.sent;\n            _context5.next = 27;\n            return deployedExpress.methods.orders3(i).call();\n\n          case 27:\n            order3 = _context5.sent;\n            orderAll = _objectSpread({}, order1, {}, order2, {}, order3);\n\n            _this3.setState({\n              orders: [..._this3.state.orders, orderAll]\n            });\n\n          case 30:\n            i++;\n            _context5.next = 18;\n            break;\n\n          case 33:\n            console.log('myOrders', _this3.state.orders);\n            _context5.next = 37;\n            break;\n\n          case 36:\n            window.alert('Express contract is not found in your blockchain.');\n\n          case 37:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n\n  render() {\n    var _this4 = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Addressbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"All Orders To Be Taken\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" #OrderId \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Pickup Address \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Shipping Address\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Order Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" Pickup Time\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Expected Delivery Time\"))), React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.orders.map((order, key) => {\n      return order.orderStatus == '101' ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" \", order.pickupAddr, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", order.shippingAddr, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" \", order.orderType, \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \" \", order.startTime.toString(), \" : 00 \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" \", order.endTime.toString(), \" : 00 \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: this.handleTakeOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Take Order\"))) : null;\n    }))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Your Taken Orders\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" #OrderId \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Order Status\"))), React.createElement(\"tbody\", {\n      id: \"orderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.orders.map((order, key) => {\n      return order.courier == this.state.account ? React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" \", order.orderId.toString(), \" \"), React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" \", order.orderStatus, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, order.orderStatus == '102' ? React.createElement(\"button\", {\n        name: order.orderId,\n        onClick: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(event) {\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return _this4.cancelOrder(event.target.name);\n\n                case 2:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6);\n          }));\n\n          return function (_x4) {\n            return _ref3.apply(this, arguments);\n          };\n        }(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Deliver Order\") : null)) : null;\n    })))));\n  }\n\n}\n\nexport default Courier;","map":{"version":3,"sources":["D:/EECE-571G/ExpressDappReact/src/components/Courier.js"],"names":["React","Component","Addressbar","Express","Web3","Courier","state","account","orders","takeOrder","_orderId","_currentTime","setState","loading","deployedExpress","methods","estimateGas","from","gasAmount","send","gas","once","receipt","handleTakeOrder","e","r","window","confirm","target","name","componentDidMount","getWeb3Provider","connectToBlockchain","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","totalNumber","call","console","log","i","orders1","order1","orders2","order2","orders3","order3","orderAll","render","map","order","key","orderStatus","orderId","toString","pickupAddr","shippingAddr","orderType","startTime","endTime","courier","event","cancelOrder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Addressbar from './Addressbar'\nimport Express from '../abis/Express'\nimport Web3 from 'web3'\n\nclass Courier extends Component {\n  state = {\n    account: '',\n    orders: [],\n  }\n\n  async componentDidMount() {\n    await this.getWeb3Provider()\n    await this.connectToBlockchain()\n  }\n\n  async getWeb3Provider() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!',\n      )\n    }\n  }\n  async connectToBlockchain() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Express.networks[networkId]\n    if (networkData) {\n      const deployedExpress = new web3.eth.Contract(\n        Express.abi,\n        networkData.address,\n      )\n      this.setState({ deployedExpress: deployedExpress })\n      const totalNumber = await deployedExpress.methods.totalNumber().call()\n      this.setState({ totalNumber })\n      console.log('totalNumber', totalNumber)\n      for (var i = 1; i <= totalNumber; i++) {\n        const order1 = await deployedExpress.methods.orders1(i).call()\n        const order2 = await deployedExpress.methods.orders2(i).call()\n        const order3 = await deployedExpress.methods.orders3(i).call()\n        const orderAll = { ...order1, ...order2, ...order3 }\n        this.setState({\n          orders: [...this.state.orders, orderAll],\n        })\n      }\n      console.log('myOrders', this.state.orders)\n    } else {\n      window.alert('Express contract is not found in your blockchain.')\n    }\n  }\n  takeOrder = async (_orderId, _currentTime) => {\n    this.setState({ loading: true })\n    const gasAmount = await this.state.deployedExpress.methods\n      .takeOrder(_orderId, _currentTime)\n      .estimateGas({ from: this.state.account })\n    this.state.deployedExpress.methods\n      .takeOrder(_orderId, _currentTime)\n      .send({ from: this.state.account, gas: gasAmount })\n      .once('receipt', receipt => {\n        this.setState({ loading: false })\n      })\n  }\n\n  handleTakeOrder = async e => {\n    var r = window.confirm(\n      'Are you sure to taking order ' + e.target.name + '?',\n    )\n    if (r == true) {\n      // var myDate = new Date();\n      // const currentTime = myDate.getHours()+1;\n      // console.log(currentTime)\n      await this.takeOrder(e.target.name, 11)\n    } else {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Addressbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <h2>All Orders To Be Taken</h2>\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>\n                <th scope=\"col\"> Pickup Address </th>\n                <th scope=\"col\"> Shipping Address</th>\n                <th scope=\"col\"> Order Type</th>\n                <th scope=\"col\"> Pickup Time</th>\n                <th scope=\"col\"> Expected Delivery Time</th>\n              </tr>\n            </thead>\n            <tbody id=\"orderList\">\n              {this.state.orders.map((order, key) => {\n                return order.orderStatus == '101' ? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>\n                    <th scope=\"row\"> {order.pickupAddr} </th>\n                    <th scope=\"row\"> {order.shippingAddr} </th>\n                    <th scope=\"row\"> {order.orderType} </th>\n                    <th scope=\"row\"> {order.startTime.toString()} : 00 </th>\n                    <th scope=\"row\"> {order.endTime.toString()} : 00 </th>\n                    <td>\n                      <button\n                        name={order.orderId}\n                        onClick={this.handleTakeOrder}\n                      >\n                        Take Order\n                      </button>\n                    </td>\n                  </tr>\n                ) : null\n              })}\n            </tbody>\n          </table>\n          <h2>Your Taken Orders</h2>\n          <table className=\"table\">\n            <thead id=\"orderList\">\n              <tr>\n                <th scope=\"col\"> #OrderId </th>\n                <th scope=\"col\"> Order Status</th>\n              </tr>\n            </thead>\n            <tbody id=\"orderList\">\n              {this.state.orders.map((order, key) => {\n                return order.courier ==this.state.account ? (\n                  <tr key={key}>\n                    <th scope=\"row\"> {order.orderId.toString()} </th>\n                    <th scope=\"row\"> {order.orderStatus} </th>\n                    <td>\n                    {order.orderStatus == '102' ? (\n                      <button\n                        name={order.orderId}\n                        onClick={async event => {\n                          await this.cancelOrder(\n                            event.target.name\n                          )\n                        }}\n                      >\n                        Deliver Order\n                      </button>\n                    ) : null}\n                    </td>\n                  </tr>\n                ) : null\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Courier\n"]},"metadata":{},"sourceType":"module"}